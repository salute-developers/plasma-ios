#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–µ–ø–ª–æ—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Docusaurus
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: 
#   ./deploy.sh [--local] [--s3] [ARTIFACT_ID] [VERSION] [BRANCH] [TARGET_TYPE] [THEME_NAME] [CODE_REFERENCE] [DOCS_URL] [--with-server] [--with-changelog]
#   ./deploy.sh [--local] [--s3] [ARTIFACT_ID] [VERSION] [BRANCH] [TARGET_TYPE] [THEME_NAME] [CODE_REFERENCE] [DOCS_URL] [S3_ACCESS_KEY_ID] [S3_SECRET_ACCESS_KEY] [S3_ENDPOINT] [S3_REGION] [S3_BUCKET] [--with-server] [--with-changelog]
# 
# S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ª–∏–±–æ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, –ª–∏–±–æ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

set -e

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è S3
S3_ACCESS_KEY_ID=""
S3_SECRET_ACCESS_KEY=""
S3_ENDPOINT=""
S3_REGION=""
S3_BUCKET=""

# –§–ª–∞–≥–∏
DEPLOY_MODE="${DEPLOY_MODE:-local}"  # local –∏–ª–∏ s3 (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
WITH_SERVER=false
WITH_CHANGELOG=false
CUSTOM_DEPLOY_PATH=""
ARGS=()

# –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
for arg in "$@"; do
    case $arg in
        --local)
            DEPLOY_MODE="local"
            ;;
        --s3)
            DEPLOY_MODE="s3"
            ;;
        --with-server)
            WITH_SERVER=true
            ;;
        --with-changelog)
            WITH_CHANGELOG=true
            ;;
        --deploy-path=*)
            CUSTOM_DEPLOY_PATH="${arg#*=}"
            ;;
        *)
            ARGS+=("$arg")
            ;;
    esac
done

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏
get_version() {
    local artifact_id="$1"
    local version="$2"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ Xcode –ø—Ä–æ–µ–∫—Ç–∞ —Ç–µ–º—ã
    # –£–±–∏—Ä–∞–µ–º :tokens: –ø—Ä–µ—Ñ–∏–∫—Å –∏–∑ artifact_id
    local clean_artifact_id="${artifact_id#:tokens:}"
    
    # –ú–∞–ø–ø–∏–Ω–≥ artifact_id -> –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç–µ–º—ã
    local theme_dir_name=""
    case "$clean_artifact_id" in
        "sddsserv-theme")
            theme_dir_name="SDDSservTheme"
            ;;
        "styles-salute-theme")
            theme_dir_name="StylesSaluteTheme"
            ;;
        "plasma-b2c-theme")
            theme_dir_name="PlasmaB2CTheme"
            ;;
        "plasma-home-ds-theme")
            theme_dir_name="PlasmaHomeDsTheme"
            ;;
        *)
            # –ï—Å–ª–∏ —Ç–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–∞–ø–ø–∏–Ω–≥–µ, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –∏–º–µ–Ω–∏
            theme_dir_name=$(find "../Themes" -maxdepth 1 -type d -name "*${clean_artifact_id}*" -printf "%f\n" | head -1)
            ;;
    esac
    
    if [[ -n "$theme_dir_name" ]]; then
        local theme_dir="../Themes/$theme_dir_name"
        if [[ -d "$theme_dir" ]]; then
            # –ò—â–µ–º .xcodeproj —Ñ–∞–π–ª –≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç–µ–º—ã
            local xcodeproj_file=$(find "$theme_dir" -name "*.xcodeproj" -type d | head -1)
            if [[ -n "$xcodeproj_file" ]]; then
                local project_file="$xcodeproj_file/project.pbxproj"
                if [[ -f "$project_file" ]]; then
                    local marketing_version=$(grep -o 'MARKETING_VERSION = [0-9]\+\.[0-9]\+\.[0-9]\+' "$project_file" | head -1 | sed 's/MARKETING_VERSION = //')
                    if [[ -n "$marketing_version" ]]; then
                        echo "$marketing_version"
                        return
                    fi
                fi
            fi
        fi
    fi
    
    # Fallback –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    echo "${version:-1.0.0}"
}

# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
ARTIFACT_ID="${ARGS[0]:-$DEFAULT_ARTIFACT_ID}"
VERSION_INPUT="${ARGS[1]:-${VERSION_INPUT:-$DEFAULT_VERSION}}"
BRANCH_NAME="${ARGS[2]:-$DEFAULT_BRANCH}"
TARGET_TYPE="${ARGS[3]:-$DEFAULT_TARGET_TYPE}"
THEME_NAME="${ARGS[4]:-$DEFAULT_THEME_NAME}"
CODE_REFERENCE="${ARGS[5]:-$DEFAULT_CODE_REFERENCE}"
DOCS_URL="${ARGS[6]:-$DEFAULT_DOCS_URL}"

# –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
VERSION=$(get_version "$ARTIFACT_ID" "$VERSION_INPUT")
echo "üîç DEBUG: VERSION_INPUT='$VERSION_INPUT', VERSION='$VERSION'"

# –ü–æ–ª—É—á–∞–µ–º S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã)
if [[ ${#ARGS[@]} -ge 12 ]]; then
    S3_ACCESS_KEY_ID="${ARGS[7]:-}"
    S3_SECRET_ACCESS_KEY="${ARGS[8]:-}"
    S3_ENDPOINT="${ARGS[9]:-}"
    S3_REGION="${ARGS[10]:-}"
    S3_BUCKET="${ARGS[11]:-}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ø—É—Å—Ç—ã–µ (–Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)
    if [[ -n "$S3_ACCESS_KEY_ID" ]] && [[ -n "$S3_SECRET_ACCESS_KEY" ]] && [[ -n "$S3_ENDPOINT" ]] && [[ -n "$S3_REGION" ]] && [[ -n "$S3_BUCKET" ]]; then
        echo "üìã –ò—Å–ø–æ–ª—å–∑—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ S3 –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏..."
    else
        echo "‚ö†Ô∏è  S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ø—É—Å—Ç—ã–µ, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã..."
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        S3_ACCESS_KEY_ID=""
        S3_SECRET_ACCESS_KEY=""
        S3_ENDPOINT=""
        S3_REGION=""
        S3_BUCKET=""
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è S3 –¥–µ–ø–ª–æ—è
if [[ "$DEPLOY_MODE" == "s3" ]]; then
    echo "üöÄ –†–µ–∂–∏–º –¥–µ–ø–ª–æ—è: S3"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ—Å—Ç—É–ø–Ω—ã
    if [[ -z "$S3_ACCESS_KEY_ID" ]] || [[ -z "$S3_SECRET_ACCESS_KEY" ]] || [[ -z "$S3_ENDPOINT" ]] || [[ -z "$S3_REGION" ]] || [[ -z "$S3_BUCKET" ]]; then
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–ª–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ S3"
        echo "   –ü–µ—Ä–µ–¥–∞–π—Ç–µ S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        echo "   S3_ACCESS_KEY_ID, S3_SECRET_ACCESS_KEY, S3_ENDPOINT, S3_REGION, S3_BUCKET"
        exit 1
    else
        echo "‚úÖ S3 –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–π–¥–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    fi
else
    echo "üß™ –†–µ–∂–∏–º –¥–µ–ø–ª–æ—è: –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç"
fi

echo ""
echo "üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
echo "  Artifact ID: $ARTIFACT_ID"
echo "  Version: $VERSION"
echo "  Branch: $BRANCH_NAME"
echo "  Target Type: $TARGET_TYPE"
echo "  Theme Name: $THEME_NAME"
echo "  Code Reference: $CODE_REFERENCE"
echo "  Docs URL: $DOCS_URL"
echo "  With Server: $WITH_SERVER"
echo "  With Changelog: $WITH_CHANGELOG"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v yarn &> /dev/null; then
    echo "‚ùå Yarn –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v jq &> /dev/null; then
    echo "‚ùå jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if [[ "$DEPLOY_MODE" == "s3" ]]; then
    if ! command -v s3cmd &> /dev/null; then
        echo "‚ùå s3cmd –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —á–µ—Ä–µ–∑ Homebrew..."
        brew install s3cmd
    fi
fi

if [[ "$WITH_SERVER" == true ]]; then
    if ! command -v curl &> /dev/null; then
        echo "‚ùå curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
fi

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ release-changelog.md –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ changelog
if [[ -f "../release-changelog.md" ]]; then
    echo "‚úÖ –ù–∞–π–¥–µ–Ω release-changelog.md, –≥–µ–Ω–µ—Ä–∏—Ä—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é —Å changelog"
    ./generate-docs.sh "$ARTIFACT_ID" "$VERSION" "$BRANCH_NAME" "$TARGET_TYPE" "$THEME_NAME" "$CODE_REFERENCE" "$DOCS_URL" --with-changelog
    WITH_CHANGELOG=true
elif [[ "$WITH_CHANGELOG" == true ]]; then
    echo "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å changelog (—Ñ–ª–∞–≥ --with-changelog)"
    ./generate-docs.sh "$ARTIFACT_ID" "$VERSION" "$BRANCH_NAME" "$TARGET_TYPE" "$THEME_NAME" "$CODE_REFERENCE" "$DOCS_URL" --with-changelog
else
    echo "‚ÑπÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑ changelog"
    ./generate-docs.sh "$ARTIFACT_ID" "$VERSION" "$BRANCH_NAME" "$TARGET_TYPE" "$THEME_NAME" "$CODE_REFERENCE" "$DOCS_URL"
fi

if [[ -d "build/generated/docusaurus" ]]; then
    echo "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"
    exit 1
fi

# –û–±–Ω–æ–≤–ª—è–µ–º versionsArchived.json –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º—ã
echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ versionsArchived.json –¥–ª—è —Ç–µ–º—ã $THEME_NAME..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Ç–µ–º—ã
case "$THEME_NAME" in
    "sddsserv")
        THEME_DIR="../Themes/SDDSservTheme"
        ;;
    "styles-salute")
        THEME_DIR="../Themes/StylesSaluteTheme"
        ;;
    "plasma-b2c")
        THEME_DIR="../Themes/PlasmaB2CTheme"
        ;;
    "plasma-homeds")
        THEME_DIR="../Themes/PlasmaHomeDSTheme"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞: $THEME_NAME"
        exit 1
        ;;
esac

echo "üéØ –ü–∞–ø–∫–∞ —Ç–µ–º—ã: $THEME_DIR"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Ç–µ–º—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ–º versionsArchived.json
cd "$THEME_DIR"
echo "üîç DEBUG: –ü–µ—Ä–µ–¥–∞—é VERSION='$VERSION' –≤ docusaurus-bump.sh"
ARTIFACT_ID="$ARTIFACT_ID" VERSION="$VERSION" BRANCH_NAME="$BRANCH_NAME" TARGET_TYPE="$TARGET_TYPE" DOCS_URL="$DOCS_URL" ../../docusaurus/scripts/docusaurus-bump.sh bump
cd - > /dev/null

echo ""

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É
echo "üî® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
cd build/generated/docusaurus
yarn install --silent
yarn build

if [[ -d "build" ]]; then
    echo "‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
echo "üîç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: docusaurus.config.ts"
if [[ -f "docusaurus.config.ts" ]]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docusaurus –Ω–∞–π–¥–µ–Ω–∞"
else
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docusaurus –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [[ -f "package.json" ]]; then
    echo "‚úÖ package.json –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [[ -d "docs" ]]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è docs –Ω–∞–π–¥–µ–Ω–∞"
    doc_count=$(find docs -name "*.md" | wc -l)
    echo "  üìÑ –ù–∞–π–¥–µ–Ω–æ $doc_count MD —Ñ–∞–π–ª–æ–≤"
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è docs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [[ -d "docs/components" ]]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞"
    component_count=$(find docs/components -name "*.md" | wc -l)
    echo "  üß© –ù–∞–π–¥–µ–Ω–æ $component_count –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [[ -d "docs/theme" ]]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ç–µ–º—ã –Ω–∞–π–¥–µ–Ω–∞"
    theme_count=$(find docs/theme -name "*.md" | wc -l)
    echo "  üé® –ù–∞–π–¥–µ–Ω–æ $theme_count —Ñ–∞–π–ª–æ–≤ —Ç–µ–º—ã"
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ç–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º deploy.json –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤
echo "üìù –°–æ–∑–¥–∞—é deploy.json..."
mkdir -p build/generated/docusaurus
if [[ "$DEPLOY_MODE" == "s3" ]]; then
    # –î–ª—è S3 —Ä–µ–∂–∏–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º S3 URL
    cat > build/generated/docusaurus/deploy.json << EOF
{
  "deployUrl": "$S3_ENDPOINT/$S3_BUCKET/$DEPLOY_PATH"
}
EOF
else
    # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
    cat > build/generated/docusaurus/deploy.json << EOF
{
  "deployUrl": "http://localhost:3000"
}
EOF
fi

# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏–ª–∏ –¥–µ–ø–ª–æ–π –Ω–∞ S3
if [[ "$DEPLOY_MODE" == "local" ]]; then
    # –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º - —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    if [[ "$WITH_SERVER" == true ]]; then
        echo ""
        echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
        echo "  –ó–∞–ø—É—Å–∫–∞—é –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        yarn start > /dev/null 2>&1 &
        SERVER_PID=$!
        
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        cleanup() {
            echo "  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä..."
            kill $SERVER_PID 2>/dev/null || true
            wait $SERVER_PID 2>/dev/null || true
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º trap –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        trap cleanup EXIT
        
        # –ñ–¥–µ–º, –ø–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è (–º–∞–∫—Å–∏–º—É–º 30 —Å–µ–∫—É–Ω–¥)
        echo "  –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
        for i in {1..30}; do
            if curl -s http://localhost:3000 > /dev/null 2>&1; then
                echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ"
                echo "  üì± –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
                echo "  ‚è±Ô∏è  –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏..."
                sleep 3
                echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
                break
            fi
            
            if ! kill -0 $SERVER_PID 2>/dev/null; then
                echo "‚ùå –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
                exit 1
            fi
            
            sleep 1
        done
    fi
    
    cd ../..
    echo ""
    echo "üéâ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
    echo "  - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: build/generated/docusaurus/"
    echo "  - –°–æ–±—Ä–∞–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã: build/generated/docusaurus/build/"
    echo ""
    echo "üöÄ –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  cd build/generated/docusaurus && yarn install && yarn start"
    
else
    # S3 —Ä–µ–∂–∏–º - –¥–µ–ø–ª–æ–∏–º –Ω–∞ S3
    echo ""
    echo "‚òÅÔ∏è  –î–µ–ø–ª–æ–π –Ω–∞ S3..."
    
    clean_artifact_id="${ARTIFACT_ID#:tokens:}"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –¥–µ–ø–ª–æ—è
    if [[ -n "$CUSTOM_DEPLOY_PATH" ]]; then
        DEPLOY_PATH="$CUSTOM_DEPLOY_PATH"
        echo "  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—É—Ç—å –¥–µ–ø–ª–æ—è: $DEPLOY_PATH"
    elif [[ "$BRANCH_NAME" == "main" ]]; then
        DEPLOY_PATH="current/ios/$clean_artifact_id/$VERSION/"
    elif [[ "$BRANCH_NAME" == "develop" ]]; then
        DEPLOY_PATH="dev/ios/$clean_artifact_id/$VERSION/"
    else
        DEPLOY_PATH="pr/$BRANCH_NAME/ios/$clean_artifact_id/$VERSION/"
    fi
    
    echo "  Deploy Path: $DEPLOY_PATH"
    
    # –î–µ–ø–ª–æ–∏–º –Ω–∞ S3
    echo "üì§ –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª—ã –Ω–∞ S3..."
    s3cmd sync build/ s3://$S3_BUCKET/$DEPLOY_PATH \
        --access_key="$S3_ACCESS_KEY_ID" \
        --secret_key="$S3_SECRET_ACCESS_KEY" \
        --host="$S3_ENDPOINT" \
        --host-bucket="$S3_ENDPOINT" \
        --bucket-location="$S3_REGION" \
        --signature-v2 \
        --delete-removed \
        --no-mime-magic \
        --acl-public \
        --recursive \
        --exclude=".DS_Store" \
        --exclude="*.log"
    
    # deploy.json —É–∂–µ —Å–æ–∑–¥–∞–Ω –≤—ã—à–µ
    
    cd ../..
    echo ""
    echo "‚úÖ –î–µ–ø–ª–æ–π –Ω–∞ S3 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üåê –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:"
    echo "   $S3_ENDPOINT/$S3_BUCKET/$DEPLOY_PATH"
fi

echo ""
echo "üìñ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
echo ""
echo "  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):"
echo "  ./deploy.sh"
echo "  ./deploy.sh --local"
echo ""
echo "  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:"
echo "  ./deploy.sh --local --with-server"
echo ""
echo "  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å changelog:"
echo "  ./deploy.sh --local --with-changelog"
echo ""
echo "  # –î–µ–ø–ª–æ–π –Ω–∞ S3 (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –ø–æ –≤–µ—Ç–∫–µ):"
echo "  ./deploy.sh --s3"
echo "  ./deploy.sh --s3 SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents"
echo ""
echo "  # –î–µ–ø–ª–æ–π –Ω–∞ S3 —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –ø—É—Ç–µ–º:"
echo "  ./deploy.sh --s3 --deploy-path=\"test/custom/path/\" SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents"
echo "  ./deploy.sh --s3 --deploy-path=\"experimental/ios/components/\" SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents"
echo ""
echo "  # –î–µ–ø–ª–æ–π –Ω–∞ S3 —Å changelog:"
echo "  ./deploy.sh --s3 --with-changelog SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents"
echo ""
echo "  # –î–µ–ø–ª–æ–π –Ω–∞ S3 —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:"
echo "  ./deploy.sh --s3 styles-salute-theme 1.0.0-dev develop swiftui \"Styles Salute Theme\" StylesSaluteTheme"
echo ""
echo "  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:"
echo "  ./deploy.sh --local SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents --with-server"
echo ""
echo "  # –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å changelog –∏ —Å–µ—Ä–≤–µ—Ä–æ–º:"
echo "  ./deploy.sh --local --with-changelog --with-server SDDSComponents 1.0.0 test swiftui \"SDDS iOS Components\" SDDSComponents"

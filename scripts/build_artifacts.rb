#!/usr/bin/env ruby

require 'fileutils'
require 'open3'
require 'zip'

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
# –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±–æ—Ä–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:
# 1. Build XCFramework –≤ SDDSThemeBuilder
# 2. build_xcframeworks.rb
# 3. build_themes.rb
# 4. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ç–µ–º –≤ artifacts
# 5. –°–æ–∑–¥–∞–Ω–∏–µ zip-–∞—Ä—Ö–∏–≤–æ–≤ –∏–∑ XCFramework

class ArtifactBuilder
  def initialize
    @project_root = File.expand_path('../..', __FILE__)
    @build_dir = File.join(@project_root, 'build')
    @artifacts_dir = File.join(@project_root, 'artifacts')
    @theme_builder_dir = File.join(@project_root, 'SDDSThemeBuilder')
  end

  def run
    puts "üöÄ –ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä–∫—É –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    FileUtils.mkdir_p(@build_dir) unless Dir.exist?(@build_dir)
    FileUtils.mkdir_p(@artifacts_dir) unless Dir.exist?(@artifacts_dir)
    
    # –®–∞–≥ 1: Build XCFramework –≤ SDDSThemeBuilder
    puts "üì¶ –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ XCFramework –≤ SDDSThemeBuilder..."
    build_xcframework
    
    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ build_xcframeworks.rb
    puts "üì¶ –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ build_xcframeworks.rb..."
    build_xcframeworks
    
    # –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ build_themes.rb
    puts "üì¶ –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ build_themes.rb..."
    build_themes
    
    # –®–∞–≥ 4: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ç–µ–º –≤ artifacts
    puts "üì¶ –®–∞–≥ 4: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Ç–µ–º –≤ artifacts..."
    copy_theme_artifacts
    
    # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ zip-–∞—Ä—Ö–∏–≤–æ–≤ –∏–∑ XCFramework
    puts "üì¶ –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ zip-–∞—Ä—Ö–∏–≤–æ–≤ –∏–∑ XCFramework..."
    create_xcframework_zips
    
    puts "‚úÖ –°–±–æ—Ä–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    list_artifacts
  end

  private

  def build_xcframework
    Dir.chdir(@theme_builder_dir) do
      puts "  –û—á–∏—â–∞—é DerivedData –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤..."
      system("xcodebuild clean -scheme 'Build XCFramework' -project SDDSThemeBuilder.xcodeproj")
      
      puts "  –í—ã–ø–æ–ª–Ω—è—é: xcodebuild -scheme 'Build XCFramework' -configuration Release"
      
      # –ò—Å–ø–æ–ª—å–∑—É–µ–º popen3 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      Open3.popen3('xcodebuild', '-scheme', 'Build XCFramework', '-configuration', 'Release', '-project', 'SDDSThemeBuilder.xcodeproj') do |stdin, stdout, stderr, wait_thr|
        # –ß–∏—Ç–∞–µ–º stdout –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stdout_thread = Thread.new do
          stdout.each_line do |line|
            puts "    #{line.chomp}"
          end
        end
        
        # –ß–∏—Ç–∞–µ–º stderr –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stderr_thread = Thread.new do
          stderr.each_line do |line|
            puts "    [ERROR] #{line.chomp}"
          end
        end
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        exit_status = wait_thr.value
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤ —á—Ç–µ–Ω–∏—è
        stdout_thread.join
        stderr_thread.join
        
        if exit_status.success?
          puts "  ‚úÖ XCFramework —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        else
          puts "  ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ XCFramework (–∫–æ–¥: #{exit_status.exitstatus})"
          exit 1
        end
      end
    end
  end

  def build_xcframeworks
    Dir.chdir(@project_root) do
      puts "  –í—ã–ø–æ–ª–Ω—è—é: ruby scripts/build_xcframeworks.rb -w SDDS.xcworkspace"
      
      # –ò—Å–ø–æ–ª—å–∑—É–µ–º popen3 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      Open3.popen3('ruby', 'scripts/build_xcframeworks.rb', '-w', 'SDDS.xcworkspace') do |stdin, stdout, stderr, wait_thr|
        # –ß–∏—Ç–∞–µ–º stdout –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stdout_thread = Thread.new do
          stdout.each_line do |line|
            puts "    #{line.chomp}"
          end
        end
        
        # –ß–∏—Ç–∞–µ–º stderr –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stderr_thread = Thread.new do
          stderr.each_line do |line|
            puts "    [ERROR] #{line.chomp}"
          end
        end
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        exit_status = wait_thr.value
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤ —á—Ç–µ–Ω–∏—è
        stdout_thread.join
        stderr_thread.join
        
        if exit_status.success?
          puts "  ‚úÖ build_xcframeworks.rb –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
          puts "  ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è build_xcframeworks.rb (–∫–æ–¥: #{exit_status.exitstatus})"
          exit 1
        end
      end
    end
  end

  def build_themes
    Dir.chdir(@project_root) do
      puts "  –í—ã–ø–æ–ª–Ω—è—é: ruby scripts/build_themes.rb"
      
      # –ò—Å–ø–æ–ª—å–∑—É–µ–º popen3 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
      Open3.popen3('ruby', 'scripts/build_themes.rb') do |stdin, stdout, stderr, wait_thr|
        # –ß–∏—Ç–∞–µ–º stdout –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stdout_thread = Thread.new do
          stdout.each_line do |line|
            puts "    #{line.chomp}"
          end
        end
        
        # –ß–∏—Ç–∞–µ–º stderr –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        stderr_thread = Thread.new do
          stderr.each_line do |line|
            puts "    [ERROR] #{line.chomp}"
          end
        end
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        exit_status = wait_thr.value
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤ —á—Ç–µ–Ω–∏—è
        stdout_thread.join
        stderr_thread.join
        
        if exit_status.success?
          puts "  ‚úÖ build_themes.rb –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
          puts "  ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è build_themes.rb (–∫–æ–¥: #{exit_status.exitstatus})"
          exit 1
        end
      end
    end
  end

  def copy_theme_artifacts
    source_dir = File.join(@project_root, 'Themes', 'build')
    destination_dir = @artifacts_dir

    if Dir.exist?(source_dir)
      puts "  –ö–æ–ø–∏—Ä—É—é —Ñ–∞–π–ª—ã –∏–∑ #{source_dir} –≤ #{destination_dir}..."
      FileUtils.cp_r(source_dir, destination_dir)
      puts "  ‚úÖ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ç–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ artifacts"
    else
      puts "  ‚ö†Ô∏è  –ü–∞–ø–∫–∞ Themes/build –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ç–µ–º –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã."
    end
  end

  def create_xcframework_zips
    if Dir.exist?(@build_dir)
      Dir.glob(File.join(@build_dir, '*.xcframework')).each do |xcframework_path|
        framework_name = File.basename(xcframework_path, '.xcframework')
        zip_path = File.join(@artifacts_dir, "#{framework_name}.xcframework.zip")
        
        puts "  –°–æ–∑–¥–∞—é zip-–∞—Ä—Ö–∏–≤: #{framework_name}.xcframework.zip"
        
        # –°–æ–∑–¥–∞–µ–º zip-–∞—Ä—Ö–∏–≤
        Zip::File.open(zip_path, Zip::File::CREATE) do |zipfile|
          Dir.glob(File.join(xcframework_path, '**/*')).each do |file|
            next if File.directory?(file)
            relative_path = file.sub(xcframework_path + '/', '')
            zipfile.add(relative_path, file)
          end
        end
        
        puts "  ‚úÖ –°–æ–∑–¥–∞–Ω zip-–∞—Ä—Ö–∏–≤: #{framework_name}.xcframework.zip"
      end
    else
      puts "  ‚ö†Ô∏è  –ü–∞–ø–∫–∞ build –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. Zip-–∞—Ä—Ö–∏–≤—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã."
    end
  end

  def list_artifacts
    puts "\nüìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ –ø–∞–ø–∫–µ artifacts:"
    
    if Dir.exist?(@artifacts_dir)
      Dir.glob(File.join(@artifacts_dir, '**/*')).each do |file|
        next if File.directory?(file)
        relative_path = file.sub(@project_root + '/', '')
        puts "  üìÑ #{relative_path}"
      end
    else
      puts "  ‚ö†Ô∏è  –ü–∞–ø–∫–∞ artifacts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    end
  end
end

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if __FILE__ == $0
  builder = ArtifactBuilder.new
  builder.run
end 
import Foundation
import SwiftUI
import SDDSComponents
import SDDSThemeCore

public struct TextAreaTypography: GeneralTypographyConfiguration {
    {%- for key, sizeVariation in data %}
    let {{ key }}: TypographyToken?
    {%- endfor %}
    
    public func typography(with size: TextAreaSizeConfiguration) -> TypographyToken? {
        switch size as? TextAreaSize {
        {%- for key, sizeVariation in data %}
        case .{{ key }}:
            return {{ key }}
        {%- endfor %}
        case .none:
            return nil
        }
    }
}

public extension TextAreaTypography {
    static var title: TypographyConfiguration {
        TextAreaTypography(
            {%- for key, sizeVariation in data %}
            {{ key }}: {% if sizeVariation.title and not sizeVariation.title.isEmpty %}Typographies.{{ sizeVariation.title | camelCase }}.typography{% else %}nil{% endif %}{% if not forloop.last %},{% endif %}
            {%- endfor %}
        ).asContainer
    }
    
    static var text: TypographyConfiguration {
        TextAreaTypography(
            {%- for key, sizeVariation in data %}
            {{ key }}: {% if sizeVariation.title and not sizeVariation.text.isEmpty %}Typographies.{{ sizeVariation.text | camelCase }}.typography{% else %}nil{% endif %}{% if not forloop.last %},{% endif %}
            {%- endfor %}
        ).asContainer
    }
    
    static var innerTitle: TypographyConfiguration {
        TextAreaTypography(
            {%- for key, sizeVariation in data %}
            {{ key }}: {% if sizeVariation.title and not sizeVariation.innerTitle.isEmpty %}Typographies.{{ sizeVariation.title | camelCase }}.typography{% else %}nil{% endif %}{% if not forloop.last %},{% endif %}
            {%- endfor %}
        ).asContainer
    }
    
    static var caption: TypographyConfiguration {
        TextAreaTypography(
            {%- for key, sizeVariation in data %}
            {{ key }}: {% if sizeVariation.caption and not sizeVariation.innerTitle.isEmpty %}Typographies.{{ sizeVariation.caption | camelCase }}.typography{% else %}nil{% endif %}{% if not forloop.last %},{% endif %}
            {%- endfor %}
        ).asContainer
    }
    
    static var counter: TypographyConfiguration {
        TextAreaTypography(
            {%- for key, sizeVariation in data %}
            {{ key }}: {% if sizeVariation.counter and not sizeVariation.counter.isEmpty %}Typographies.{{ sizeVariation.counter | camelCase }}.typography{% else %}nil{% endif %}{% if not forloop.last %},{% endif %}
            {%- endfor %}
        ).asContainer
    }
}

import Foundation
import SwiftUI
import SDDSComponents
import SDDSThemeCore

struct {{ component }}Typography: GeneralTypographyConfiguration {
    {%- for key, variation in variations %}
    var {{ key | camelCase }}: TypographyToken?
    {%- endfor %}
    
    init(
        {%- for key, variation in variations %}
        {{ key | camelCase  }}: TypographyToken? = nil{% if not forloop.last %},{% endif %}
        {%- endfor %}
    ) {
    {%- for key, variation in variations %}
        self.{{ key | camelCase  }} = {{ key | camelCase  }}
    {%- endfor %}
    }
    
    init(oneSize: TypographyToken) {
    {%- for key, variation in variations %}
        self.{{ key | camelCase  }} = oneSize
    {%- endfor %}
    }
    
    func typography(with size: {{ sizeConfiguration }}) -> TypographyToken? {
        if size is {{ component }}AnySize {
            {%- for key, variation in variations %}
            {%- if forloop.first %}
            return {{ key | camelCase }}
            {%- endif %}
            {%- endfor %}
        }
        {%- for key, variation in variations %}
        if size is {{ component }}Size{{ key | camelCase | capitalized }} {
            return {{ key | camelCase  }}
        }
        {%- endfor %}
        return nil
    }
}

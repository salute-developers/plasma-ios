import SwiftUI
import UIKit
@_exported import SDDSThemeCore

public struct Colors {
    public let backgroundDarkPrimary = ColorToken.backgroundDarkPrimary
    public let backgroundDarkSecondary = ColorToken.backgroundDarkSecondary
    public let backgroundDarkTertiary = ColorToken.backgroundDarkTertiary
    public let backgroundDefaultPrimary = ColorToken.backgroundDefaultPrimary
    public let backgroundDefaultSecondary = ColorToken.backgroundDefaultSecondary
    public let backgroundDefaultTertiary = ColorToken.backgroundDefaultTertiary
    public let backgroundInversePrimary = ColorToken.backgroundInversePrimary
    public let backgroundInverseSecondary = ColorToken.backgroundInverseSecondary
    public let backgroundInverseTertiary = ColorToken.backgroundInverseTertiary
    public let backgroundLightPrimary = ColorToken.backgroundLightPrimary
    public let backgroundLightSecondary = ColorToken.backgroundLightSecondary
    public let backgroundLightTertiary = ColorToken.backgroundLightTertiary
    public let outlineDefaultAccent = ColorToken.outlineDefaultAccent
    public let outlineDefaultAccentActive = ColorToken.outlineDefaultAccentActive
    public let outlineDefaultAccentHover = ColorToken.outlineDefaultAccentHover
    public let outlineDefaultAccentMinor = ColorToken.outlineDefaultAccentMinor
    public let outlineDefaultAccentMinorActive = ColorToken.outlineDefaultAccentMinorActive
    public let outlineDefaultAccentMinorHover = ColorToken.outlineDefaultAccentMinorHover
    public let outlineDefaultClear = ColorToken.outlineDefaultClear
    public let outlineDefaultClearActive = ColorToken.outlineDefaultClearActive
    public let outlineDefaultClearHover = ColorToken.outlineDefaultClearHover
    public let outlineDefaultInfo = ColorToken.outlineDefaultInfo
    public let outlineDefaultInfoActive = ColorToken.outlineDefaultInfoActive
    public let outlineDefaultInfoHover = ColorToken.outlineDefaultInfoHover
    public let outlineDefaultInfoMinor = ColorToken.outlineDefaultInfoMinor
    public let outlineDefaultInfoMinorActive = ColorToken.outlineDefaultInfoMinorActive
    public let outlineDefaultInfoMinorHover = ColorToken.outlineDefaultInfoMinorHover
    public let outlineDefaultNegative = ColorToken.outlineDefaultNegative
    public let outlineDefaultNegativeActive = ColorToken.outlineDefaultNegativeActive
    public let outlineDefaultNegativeHover = ColorToken.outlineDefaultNegativeHover
    public let outlineDefaultNegativeMinor = ColorToken.outlineDefaultNegativeMinor
    public let outlineDefaultNegativeMinorActive = ColorToken.outlineDefaultNegativeMinorActive
    public let outlineDefaultNegativeMinorHover = ColorToken.outlineDefaultNegativeMinorHover
    public let outlineDefaultPositive = ColorToken.outlineDefaultPositive
    public let outlineDefaultPositiveActive = ColorToken.outlineDefaultPositiveActive
    public let outlineDefaultPositiveHover = ColorToken.outlineDefaultPositiveHover
    public let outlineDefaultPositiveMinor = ColorToken.outlineDefaultPositiveMinor
    public let outlineDefaultPositiveMinorActive = ColorToken.outlineDefaultPositiveMinorActive
    public let outlineDefaultPositiveMinorHover = ColorToken.outlineDefaultPositiveMinorHover
    public let outlineDefaultPromo = ColorToken.outlineDefaultPromo
    public let outlineDefaultPromoActive = ColorToken.outlineDefaultPromoActive
    public let outlineDefaultPromoHover = ColorToken.outlineDefaultPromoHover
    public let outlineDefaultPromoMinor = ColorToken.outlineDefaultPromoMinor
    public let outlineDefaultPromoMinorActive = ColorToken.outlineDefaultPromoMinorActive
    public let outlineDefaultPromoMinorHover = ColorToken.outlineDefaultPromoMinorHover
    public let outlineDefaultSolidPrimary = ColorToken.outlineDefaultSolidPrimary
    public let outlineDefaultSolidPrimaryActive = ColorToken.outlineDefaultSolidPrimaryActive
    public let outlineDefaultSolidPrimaryHover = ColorToken.outlineDefaultSolidPrimaryHover
    public let outlineDefaultSolidSecondary = ColorToken.outlineDefaultSolidSecondary
    public let outlineDefaultSolidSecondaryActive = ColorToken.outlineDefaultSolidSecondaryActive
    public let outlineDefaultSolidSecondaryHover = ColorToken.outlineDefaultSolidSecondaryHover
    public let outlineDefaultSolidTertiary = ColorToken.outlineDefaultSolidTertiary
    public let outlineDefaultSolidTertiaryActive = ColorToken.outlineDefaultSolidTertiaryActive
    public let outlineDefaultSolidTertiaryHover = ColorToken.outlineDefaultSolidTertiaryHover
    public let outlineDefaultTransparentAccent = ColorToken.outlineDefaultTransparentAccent
    public let outlineDefaultTransparentAccentActive = ColorToken.outlineDefaultTransparentAccentActive
    public let outlineDefaultTransparentAccentHover = ColorToken.outlineDefaultTransparentAccentHover
    public let outlineDefaultTransparentDefault = ColorToken.outlineDefaultTransparentDefault
    public let outlineDefaultTransparentDefaultActive = ColorToken.outlineDefaultTransparentDefaultActive
    public let outlineDefaultTransparentDefaultHover = ColorToken.outlineDefaultTransparentDefaultHover
    public let outlineDefaultTransparentInfo = ColorToken.outlineDefaultTransparentInfo
    public let outlineDefaultTransparentInfoActive = ColorToken.outlineDefaultTransparentInfoActive
    public let outlineDefaultTransparentInfoHover = ColorToken.outlineDefaultTransparentInfoHover
    public let outlineDefaultTransparentNegative = ColorToken.outlineDefaultTransparentNegative
    public let outlineDefaultTransparentNegativeActive = ColorToken.outlineDefaultTransparentNegativeActive
    public let outlineDefaultTransparentNegativeHover = ColorToken.outlineDefaultTransparentNegativeHover
    public let outlineDefaultTransparentPositive = ColorToken.outlineDefaultTransparentPositive
    public let outlineDefaultTransparentPositiveActive = ColorToken.outlineDefaultTransparentPositiveActive
    public let outlineDefaultTransparentPositiveHover = ColorToken.outlineDefaultTransparentPositiveHover
    public let outlineDefaultTransparentPrimary = ColorToken.outlineDefaultTransparentPrimary
    public let outlineDefaultTransparentPrimaryActive = ColorToken.outlineDefaultTransparentPrimaryActive
    public let outlineDefaultTransparentPrimaryHover = ColorToken.outlineDefaultTransparentPrimaryHover
    public let outlineDefaultTransparentSecondary = ColorToken.outlineDefaultTransparentSecondary
    public let outlineDefaultTransparentSecondaryActive = ColorToken.outlineDefaultTransparentSecondaryActive
    public let outlineDefaultTransparentSecondaryHover = ColorToken.outlineDefaultTransparentSecondaryHover
    public let outlineDefaultTransparentTertiary = ColorToken.outlineDefaultTransparentTertiary
    public let outlineDefaultTransparentTertiaryActive = ColorToken.outlineDefaultTransparentTertiaryActive
    public let outlineDefaultTransparentTertiaryHover = ColorToken.outlineDefaultTransparentTertiaryHover
    public let outlineDefaultTransparentWarning = ColorToken.outlineDefaultTransparentWarning
    public let outlineDefaultTransparentWarningActive = ColorToken.outlineDefaultTransparentWarningActive
    public let outlineDefaultTransparentWarningHover = ColorToken.outlineDefaultTransparentWarningHover
    public let outlineDefaultWarning = ColorToken.outlineDefaultWarning
    public let outlineDefaultWarningActive = ColorToken.outlineDefaultWarningActive
    public let outlineDefaultWarningHover = ColorToken.outlineDefaultWarningHover
    public let outlineDefaultWarningMinor = ColorToken.outlineDefaultWarningMinor
    public let outlineDefaultWarningMinorActive = ColorToken.outlineDefaultWarningMinorActive
    public let outlineDefaultWarningMinorHover = ColorToken.outlineDefaultWarningMinorHover
    public let outlineInverseAccent = ColorToken.outlineInverseAccent
    public let outlineInverseAccentActive = ColorToken.outlineInverseAccentActive
    public let outlineInverseAccentHover = ColorToken.outlineInverseAccentHover
    public let outlineInverseAccentMinor = ColorToken.outlineInverseAccentMinor
    public let outlineInverseAccentMinorActive = ColorToken.outlineInverseAccentMinorActive
    public let outlineInverseAccentMinorHover = ColorToken.outlineInverseAccentMinorHover
    public let outlineInverseClear = ColorToken.outlineInverseClear
    public let outlineInverseClearActive = ColorToken.outlineInverseClearActive
    public let outlineInverseClearHover = ColorToken.outlineInverseClearHover
    public let outlineInverseInfo = ColorToken.outlineInverseInfo
    public let outlineInverseInfoActive = ColorToken.outlineInverseInfoActive
    public let outlineInverseInfoHover = ColorToken.outlineInverseInfoHover
    public let outlineInverseInfoMinor = ColorToken.outlineInverseInfoMinor
    public let outlineInverseInfoMinorActive = ColorToken.outlineInverseInfoMinorActive
    public let outlineInverseInfoMinorHover = ColorToken.outlineInverseInfoMinorHover
    public let outlineInverseNegative = ColorToken.outlineInverseNegative
    public let outlineInverseNegativeActive = ColorToken.outlineInverseNegativeActive
    public let outlineInverseNegativeHover = ColorToken.outlineInverseNegativeHover
    public let outlineInverseNegativeMinor = ColorToken.outlineInverseNegativeMinor
    public let outlineInverseNegativeMinorActive = ColorToken.outlineInverseNegativeMinorActive
    public let outlineInverseNegativeMinorHover = ColorToken.outlineInverseNegativeMinorHover
    public let outlineInversePositive = ColorToken.outlineInversePositive
    public let outlineInversePositiveActive = ColorToken.outlineInversePositiveActive
    public let outlineInversePositiveHover = ColorToken.outlineInversePositiveHover
    public let outlineInversePositiveMinor = ColorToken.outlineInversePositiveMinor
    public let outlineInversePositiveMinorActive = ColorToken.outlineInversePositiveMinorActive
    public let outlineInversePositiveMinorHover = ColorToken.outlineInversePositiveMinorHover
    public let outlineInversePromo = ColorToken.outlineInversePromo
    public let outlineInversePromoActive = ColorToken.outlineInversePromoActive
    public let outlineInversePromoHover = ColorToken.outlineInversePromoHover
    public let outlineInversePromoMinor = ColorToken.outlineInversePromoMinor
    public let outlineInversePromoMinorActive = ColorToken.outlineInversePromoMinorActive
    public let outlineInversePromoMinorHover = ColorToken.outlineInversePromoMinorHover
    public let outlineInverseSolidPrimary = ColorToken.outlineInverseSolidPrimary
    public let outlineInverseSolidPrimaryActive = ColorToken.outlineInverseSolidPrimaryActive
    public let outlineInverseSolidPrimaryHover = ColorToken.outlineInverseSolidPrimaryHover
    public let outlineInverseSolidSecondary = ColorToken.outlineInverseSolidSecondary
    public let outlineInverseSolidSecondaryActive = ColorToken.outlineInverseSolidSecondaryActive
    public let outlineInverseSolidSecondaryHover = ColorToken.outlineInverseSolidSecondaryHover
    public let outlineInverseSolidTertiary = ColorToken.outlineInverseSolidTertiary
    public let outlineInverseSolidTertiaryActive = ColorToken.outlineInverseSolidTertiaryActive
    public let outlineInverseSolidTertiaryHover = ColorToken.outlineInverseSolidTertiaryHover
    public let outlineInverseTransparentAccent = ColorToken.outlineInverseTransparentAccent
    public let outlineInverseTransparentAccentActive = ColorToken.outlineInverseTransparentAccentActive
    public let outlineInverseTransparentAccentHover = ColorToken.outlineInverseTransparentAccentHover
    public let outlineInverseTransparentDefault = ColorToken.outlineInverseTransparentDefault
    public let outlineInverseTransparentDefaultActive = ColorToken.outlineInverseTransparentDefaultActive
    public let outlineInverseTransparentDefaultHover = ColorToken.outlineInverseTransparentDefaultHover
    public let outlineInverseTransparentInfo = ColorToken.outlineInverseTransparentInfo
    public let outlineInverseTransparentInfoActive = ColorToken.outlineInverseTransparentInfoActive
    public let outlineInverseTransparentInfoHover = ColorToken.outlineInverseTransparentInfoHover
    public let outlineInverseTransparentNegative = ColorToken.outlineInverseTransparentNegative
    public let outlineInverseTransparentNegativeActive = ColorToken.outlineInverseTransparentNegativeActive
    public let outlineInverseTransparentNegativeHover = ColorToken.outlineInverseTransparentNegativeHover
    public let outlineInverseTransparentPositive = ColorToken.outlineInverseTransparentPositive
    public let outlineInverseTransparentPositiveActive = ColorToken.outlineInverseTransparentPositiveActive
    public let outlineInverseTransparentPositiveHover = ColorToken.outlineInverseTransparentPositiveHover
    public let outlineInverseTransparentPrimary = ColorToken.outlineInverseTransparentPrimary
    public let outlineInverseTransparentPrimaryActive = ColorToken.outlineInverseTransparentPrimaryActive
    public let outlineInverseTransparentPrimaryHover = ColorToken.outlineInverseTransparentPrimaryHover
    public let outlineInverseTransparentSecondary = ColorToken.outlineInverseTransparentSecondary
    public let outlineInverseTransparentSecondaryActive = ColorToken.outlineInverseTransparentSecondaryActive
    public let outlineInverseTransparentSecondaryHover = ColorToken.outlineInverseTransparentSecondaryHover
    public let outlineInverseTransparentTertiary = ColorToken.outlineInverseTransparentTertiary
    public let outlineInverseTransparentTertiaryActive = ColorToken.outlineInverseTransparentTertiaryActive
    public let outlineInverseTransparentTertiaryHover = ColorToken.outlineInverseTransparentTertiaryHover
    public let outlineInverseTransparentWarning = ColorToken.outlineInverseTransparentWarning
    public let outlineInverseTransparentWarningActive = ColorToken.outlineInverseTransparentWarningActive
    public let outlineInverseTransparentWarningHover = ColorToken.outlineInverseTransparentWarningHover
    public let outlineInverseWarning = ColorToken.outlineInverseWarning
    public let outlineInverseWarningActive = ColorToken.outlineInverseWarningActive
    public let outlineInverseWarningHover = ColorToken.outlineInverseWarningHover
    public let outlineInverseWarningMinor = ColorToken.outlineInverseWarningMinor
    public let outlineInverseWarningMinorActive = ColorToken.outlineInverseWarningMinorActive
    public let outlineInverseWarningMinorHover = ColorToken.outlineInverseWarningMinorHover
    public let outlineOnDarkAccent = ColorToken.outlineOnDarkAccent
    public let outlineOnDarkAccentActive = ColorToken.outlineOnDarkAccentActive
    public let outlineOnDarkAccentHover = ColorToken.outlineOnDarkAccentHover
    public let outlineOnDarkAccentMinor = ColorToken.outlineOnDarkAccentMinor
    public let outlineOnDarkAccentMinorActive = ColorToken.outlineOnDarkAccentMinorActive
    public let outlineOnDarkAccentMinorHover = ColorToken.outlineOnDarkAccentMinorHover
    public let outlineOnDarkClear = ColorToken.outlineOnDarkClear
    public let outlineOnDarkClearActive = ColorToken.outlineOnDarkClearActive
    public let outlineOnDarkClearHover = ColorToken.outlineOnDarkClearHover
    public let outlineOnDarkInfo = ColorToken.outlineOnDarkInfo
    public let outlineOnDarkInfoActive = ColorToken.outlineOnDarkInfoActive
    public let outlineOnDarkInfoHover = ColorToken.outlineOnDarkInfoHover
    public let outlineOnDarkInfoMinor = ColorToken.outlineOnDarkInfoMinor
    public let outlineOnDarkInfoMinorActive = ColorToken.outlineOnDarkInfoMinorActive
    public let outlineOnDarkInfoMinorHover = ColorToken.outlineOnDarkInfoMinorHover
    public let outlineOnDarkNegative = ColorToken.outlineOnDarkNegative
    public let outlineOnDarkNegativeActive = ColorToken.outlineOnDarkNegativeActive
    public let outlineOnDarkNegativeHover = ColorToken.outlineOnDarkNegativeHover
    public let outlineOnDarkNegativeMinor = ColorToken.outlineOnDarkNegativeMinor
    public let outlineOnDarkNegativeMinorActive = ColorToken.outlineOnDarkNegativeMinorActive
    public let outlineOnDarkNegativeMinorHover = ColorToken.outlineOnDarkNegativeMinorHover
    public let outlineOnDarkPositive = ColorToken.outlineOnDarkPositive
    public let outlineOnDarkPositiveActive = ColorToken.outlineOnDarkPositiveActive
    public let outlineOnDarkPositiveHover = ColorToken.outlineOnDarkPositiveHover
    public let outlineOnDarkPositiveMinor = ColorToken.outlineOnDarkPositiveMinor
    public let outlineOnDarkPositiveMinorActive = ColorToken.outlineOnDarkPositiveMinorActive
    public let outlineOnDarkPositiveMinorHover = ColorToken.outlineOnDarkPositiveMinorHover
    public let outlineOnDarkPromo = ColorToken.outlineOnDarkPromo
    public let outlineOnDarkPromoActive = ColorToken.outlineOnDarkPromoActive
    public let outlineOnDarkPromoHover = ColorToken.outlineOnDarkPromoHover
    public let outlineOnDarkPromoMinor = ColorToken.outlineOnDarkPromoMinor
    public let outlineOnDarkPromoMinorActive = ColorToken.outlineOnDarkPromoMinorActive
    public let outlineOnDarkPromoMinorHover = ColorToken.outlineOnDarkPromoMinorHover
    public let outlineOnDarkSolidPrimary = ColorToken.outlineOnDarkSolidPrimary
    public let outlineOnDarkSolidPrimaryActive = ColorToken.outlineOnDarkSolidPrimaryActive
    public let outlineOnDarkSolidPrimaryHover = ColorToken.outlineOnDarkSolidPrimaryHover
    public let outlineOnDarkSolidSecondary = ColorToken.outlineOnDarkSolidSecondary
    public let outlineOnDarkSolidSecondaryActive = ColorToken.outlineOnDarkSolidSecondaryActive
    public let outlineOnDarkSolidSecondaryHover = ColorToken.outlineOnDarkSolidSecondaryHover
    public let outlineOnDarkSolidTertiary = ColorToken.outlineOnDarkSolidTertiary
    public let outlineOnDarkSolidTertiaryActive = ColorToken.outlineOnDarkSolidTertiaryActive
    public let outlineOnDarkSolidTertiaryHover = ColorToken.outlineOnDarkSolidTertiaryHover
    public let outlineOnDarkTransparentAccent = ColorToken.outlineOnDarkTransparentAccent
    public let outlineOnDarkTransparentAccentActive = ColorToken.outlineOnDarkTransparentAccentActive
    public let outlineOnDarkTransparentAccentHover = ColorToken.outlineOnDarkTransparentAccentHover
    public let outlineOnDarkTransparentDefault = ColorToken.outlineOnDarkTransparentDefault
    public let outlineOnDarkTransparentDefaultActive = ColorToken.outlineOnDarkTransparentDefaultActive
    public let outlineOnDarkTransparentDefaultHover = ColorToken.outlineOnDarkTransparentDefaultHover
    public let outlineOnDarkTransparentInfo = ColorToken.outlineOnDarkTransparentInfo
    public let outlineOnDarkTransparentInfoActive = ColorToken.outlineOnDarkTransparentInfoActive
    public let outlineOnDarkTransparentInfoHover = ColorToken.outlineOnDarkTransparentInfoHover
    public let outlineOnDarkTransparentNegative = ColorToken.outlineOnDarkTransparentNegative
    public let outlineOnDarkTransparentNegativeActive = ColorToken.outlineOnDarkTransparentNegativeActive
    public let outlineOnDarkTransparentNegativeHover = ColorToken.outlineOnDarkTransparentNegativeHover
    public let outlineOnDarkTransparentPositive = ColorToken.outlineOnDarkTransparentPositive
    public let outlineOnDarkTransparentPositiveActive = ColorToken.outlineOnDarkTransparentPositiveActive
    public let outlineOnDarkTransparentPositiveHover = ColorToken.outlineOnDarkTransparentPositiveHover
    public let outlineOnDarkTransparentPrimary = ColorToken.outlineOnDarkTransparentPrimary
    public let outlineOnDarkTransparentPrimaryActive = ColorToken.outlineOnDarkTransparentPrimaryActive
    public let outlineOnDarkTransparentPrimaryHover = ColorToken.outlineOnDarkTransparentPrimaryHover
    public let outlineOnDarkTransparentSecondary = ColorToken.outlineOnDarkTransparentSecondary
    public let outlineOnDarkTransparentSecondaryActive = ColorToken.outlineOnDarkTransparentSecondaryActive
    public let outlineOnDarkTransparentSecondaryHover = ColorToken.outlineOnDarkTransparentSecondaryHover
    public let outlineOnDarkTransparentTertiary = ColorToken.outlineOnDarkTransparentTertiary
    public let outlineOnDarkTransparentTertiaryActive = ColorToken.outlineOnDarkTransparentTertiaryActive
    public let outlineOnDarkTransparentTertiaryHover = ColorToken.outlineOnDarkTransparentTertiaryHover
    public let outlineOnDarkTransparentWarning = ColorToken.outlineOnDarkTransparentWarning
    public let outlineOnDarkTransparentWarningActive = ColorToken.outlineOnDarkTransparentWarningActive
    public let outlineOnDarkTransparentWarningHover = ColorToken.outlineOnDarkTransparentWarningHover
    public let outlineOnDarkWarning = ColorToken.outlineOnDarkWarning
    public let outlineOnDarkWarningActive = ColorToken.outlineOnDarkWarningActive
    public let outlineOnDarkWarningHover = ColorToken.outlineOnDarkWarningHover
    public let outlineOnDarkWarningMinor = ColorToken.outlineOnDarkWarningMinor
    public let outlineOnDarkWarningMinorActive = ColorToken.outlineOnDarkWarningMinorActive
    public let outlineOnDarkWarningMinorHover = ColorToken.outlineOnDarkWarningMinorHover
    public let outlineOnLightAccent = ColorToken.outlineOnLightAccent
    public let outlineOnLightAccentActive = ColorToken.outlineOnLightAccentActive
    public let outlineOnLightAccentHover = ColorToken.outlineOnLightAccentHover
    public let outlineOnLightAccentMinor = ColorToken.outlineOnLightAccentMinor
    public let outlineOnLightAccentMinorActive = ColorToken.outlineOnLightAccentMinorActive
    public let outlineOnLightAccentMinorHover = ColorToken.outlineOnLightAccentMinorHover
    public let outlineOnLightClear = ColorToken.outlineOnLightClear
    public let outlineOnLightClearActive = ColorToken.outlineOnLightClearActive
    public let outlineOnLightClearHover = ColorToken.outlineOnLightClearHover
    public let outlineOnLightInfo = ColorToken.outlineOnLightInfo
    public let outlineOnLightInfoActive = ColorToken.outlineOnLightInfoActive
    public let outlineOnLightInfoHover = ColorToken.outlineOnLightInfoHover
    public let outlineOnLightInfoMinor = ColorToken.outlineOnLightInfoMinor
    public let outlineOnLightInfoMinorActive = ColorToken.outlineOnLightInfoMinorActive
    public let outlineOnLightInfoMinorHover = ColorToken.outlineOnLightInfoMinorHover
    public let outlineOnLightNegative = ColorToken.outlineOnLightNegative
    public let outlineOnLightNegativeActive = ColorToken.outlineOnLightNegativeActive
    public let outlineOnLightNegativeHover = ColorToken.outlineOnLightNegativeHover
    public let outlineOnLightNegativeMinor = ColorToken.outlineOnLightNegativeMinor
    public let outlineOnLightNegativeMinorActive = ColorToken.outlineOnLightNegativeMinorActive
    public let outlineOnLightNegativeMinorHover = ColorToken.outlineOnLightNegativeMinorHover
    public let outlineOnLightPositive = ColorToken.outlineOnLightPositive
    public let outlineOnLightPositiveActive = ColorToken.outlineOnLightPositiveActive
    public let outlineOnLightPositiveHover = ColorToken.outlineOnLightPositiveHover
    public let outlineOnLightPositiveMinor = ColorToken.outlineOnLightPositiveMinor
    public let outlineOnLightPositiveMinorActive = ColorToken.outlineOnLightPositiveMinorActive
    public let outlineOnLightPositiveMinorHover = ColorToken.outlineOnLightPositiveMinorHover
    public let outlineOnLightPromo = ColorToken.outlineOnLightPromo
    public let outlineOnLightPromoActive = ColorToken.outlineOnLightPromoActive
    public let outlineOnLightPromoHover = ColorToken.outlineOnLightPromoHover
    public let outlineOnLightPromoMinor = ColorToken.outlineOnLightPromoMinor
    public let outlineOnLightPromoMinorActive = ColorToken.outlineOnLightPromoMinorActive
    public let outlineOnLightPromoMinorHover = ColorToken.outlineOnLightPromoMinorHover
    public let outlineOnLightSolidPrimary = ColorToken.outlineOnLightSolidPrimary
    public let outlineOnLightSolidPrimaryActive = ColorToken.outlineOnLightSolidPrimaryActive
    public let outlineOnLightSolidPrimaryHover = ColorToken.outlineOnLightSolidPrimaryHover
    public let outlineOnLightSolidSecondary = ColorToken.outlineOnLightSolidSecondary
    public let outlineOnLightSolidSecondaryActive = ColorToken.outlineOnLightSolidSecondaryActive
    public let outlineOnLightSolidSecondaryHover = ColorToken.outlineOnLightSolidSecondaryHover
    public let outlineOnLightSolidTertiary = ColorToken.outlineOnLightSolidTertiary
    public let outlineOnLightSolidTertiaryActive = ColorToken.outlineOnLightSolidTertiaryActive
    public let outlineOnLightSolidTertiaryHover = ColorToken.outlineOnLightSolidTertiaryHover
    public let outlineOnLightTransparentAccent = ColorToken.outlineOnLightTransparentAccent
    public let outlineOnLightTransparentAccentActive = ColorToken.outlineOnLightTransparentAccentActive
    public let outlineOnLightTransparentAccentHover = ColorToken.outlineOnLightTransparentAccentHover
    public let outlineOnLightTransparentDefault = ColorToken.outlineOnLightTransparentDefault
    public let outlineOnLightTransparentDefaultActive = ColorToken.outlineOnLightTransparentDefaultActive
    public let outlineOnLightTransparentDefaultHover = ColorToken.outlineOnLightTransparentDefaultHover
    public let outlineOnLightTransparentInfo = ColorToken.outlineOnLightTransparentInfo
    public let outlineOnLightTransparentInfoActive = ColorToken.outlineOnLightTransparentInfoActive
    public let outlineOnLightTransparentInfoHover = ColorToken.outlineOnLightTransparentInfoHover
    public let outlineOnLightTransparentNegative = ColorToken.outlineOnLightTransparentNegative
    public let outlineOnLightTransparentNegativeActive = ColorToken.outlineOnLightTransparentNegativeActive
    public let outlineOnLightTransparentNegativeHover = ColorToken.outlineOnLightTransparentNegativeHover
    public let outlineOnLightTransparentPositive = ColorToken.outlineOnLightTransparentPositive
    public let outlineOnLightTransparentPositiveActive = ColorToken.outlineOnLightTransparentPositiveActive
    public let outlineOnLightTransparentPositiveHover = ColorToken.outlineOnLightTransparentPositiveHover
    public let outlineOnLightTransparentPrimary = ColorToken.outlineOnLightTransparentPrimary
    public let outlineOnLightTransparentPrimaryActive = ColorToken.outlineOnLightTransparentPrimaryActive
    public let outlineOnLightTransparentPrimaryHover = ColorToken.outlineOnLightTransparentPrimaryHover
    public let outlineOnLightTransparentSecondary = ColorToken.outlineOnLightTransparentSecondary
    public let outlineOnLightTransparentSecondaryActive = ColorToken.outlineOnLightTransparentSecondaryActive
    public let outlineOnLightTransparentSecondaryHover = ColorToken.outlineOnLightTransparentSecondaryHover
    public let outlineOnLightTransparentTertiary = ColorToken.outlineOnLightTransparentTertiary
    public let outlineOnLightTransparentTertiaryActive = ColorToken.outlineOnLightTransparentTertiaryActive
    public let outlineOnLightTransparentTertiaryHover = ColorToken.outlineOnLightTransparentTertiaryHover
    public let outlineOnLightTransparentWarning = ColorToken.outlineOnLightTransparentWarning
    public let outlineOnLightTransparentWarningActive = ColorToken.outlineOnLightTransparentWarningActive
    public let outlineOnLightTransparentWarningHover = ColorToken.outlineOnLightTransparentWarningHover
    public let outlineOnLightWarning = ColorToken.outlineOnLightWarning
    public let outlineOnLightWarningActive = ColorToken.outlineOnLightWarningActive
    public let outlineOnLightWarningHover = ColorToken.outlineOnLightWarningHover
    public let outlineOnLightWarningMinor = ColorToken.outlineOnLightWarningMinor
    public let outlineOnLightWarningMinorActive = ColorToken.outlineOnLightWarningMinorActive
    public let outlineOnLightWarningMinorHover = ColorToken.outlineOnLightWarningMinorHover
    public let overlayDefaultBlur = ColorToken.overlayDefaultBlur
    public let overlayDefaultHard = ColorToken.overlayDefaultHard
    public let overlayDefaultSoft = ColorToken.overlayDefaultSoft
    public let overlayInverseBlur = ColorToken.overlayInverseBlur
    public let overlayInverseHard = ColorToken.overlayInverseHard
    public let overlayInverseSoft = ColorToken.overlayInverseSoft
    public let overlayOnDarkBlur = ColorToken.overlayOnDarkBlur
    public let overlayOnDarkHard = ColorToken.overlayOnDarkHard
    public let overlayOnDarkSoft = ColorToken.overlayOnDarkSoft
    public let overlayOnLightBlur = ColorToken.overlayOnLightBlur
    public let overlayOnLightHard = ColorToken.overlayOnLightHard
    public let overlayOnLightSoft = ColorToken.overlayOnLightSoft
    public let surfaceDefaultAccent = ColorToken.surfaceDefaultAccent
    public let surfaceDefaultAccentActive = ColorToken.surfaceDefaultAccentActive
    public let surfaceDefaultAccentHover = ColorToken.surfaceDefaultAccentHover
    public let surfaceDefaultAccentMinor = ColorToken.surfaceDefaultAccentMinor
    public let surfaceDefaultAccentMinorActive = ColorToken.surfaceDefaultAccentMinorActive
    public let surfaceDefaultAccentMinorHover = ColorToken.surfaceDefaultAccentMinorHover
    public let surfaceDefaultClear = ColorToken.surfaceDefaultClear
    public let surfaceDefaultClearActive = ColorToken.surfaceDefaultClearActive
    public let surfaceDefaultClearHover = ColorToken.surfaceDefaultClearHover
    public let surfaceDefaultInfo = ColorToken.surfaceDefaultInfo
    public let surfaceDefaultInfoActive = ColorToken.surfaceDefaultInfoActive
    public let surfaceDefaultInfoHover = ColorToken.surfaceDefaultInfoHover
    public let surfaceDefaultInfoMinor = ColorToken.surfaceDefaultInfoMinor
    public let surfaceDefaultInfoMinorActive = ColorToken.surfaceDefaultInfoMinorActive
    public let surfaceDefaultInfoMinorHover = ColorToken.surfaceDefaultInfoMinorHover
    public let surfaceDefaultNegative = ColorToken.surfaceDefaultNegative
    public let surfaceDefaultNegativeActive = ColorToken.surfaceDefaultNegativeActive
    public let surfaceDefaultNegativeHover = ColorToken.surfaceDefaultNegativeHover
    public let surfaceDefaultNegativeMinor = ColorToken.surfaceDefaultNegativeMinor
    public let surfaceDefaultNegativeMinorActive = ColorToken.surfaceDefaultNegativeMinorActive
    public let surfaceDefaultNegativeMinorHover = ColorToken.surfaceDefaultNegativeMinorHover
    public let surfaceDefaultPositive = ColorToken.surfaceDefaultPositive
    public let surfaceDefaultPositiveActive = ColorToken.surfaceDefaultPositiveActive
    public let surfaceDefaultPositiveHover = ColorToken.surfaceDefaultPositiveHover
    public let surfaceDefaultPositiveMinor = ColorToken.surfaceDefaultPositiveMinor
    public let surfaceDefaultPositiveMinorActive = ColorToken.surfaceDefaultPositiveMinorActive
    public let surfaceDefaultPositiveMinorHover = ColorToken.surfaceDefaultPositiveMinorHover
    public let surfaceDefaultPromo = ColorToken.surfaceDefaultPromo
    public let surfaceDefaultPromoActive = ColorToken.surfaceDefaultPromoActive
    public let surfaceDefaultPromoHover = ColorToken.surfaceDefaultPromoHover
    public let surfaceDefaultPromoMinor = ColorToken.surfaceDefaultPromoMinor
    public let surfaceDefaultPromoMinorActive = ColorToken.surfaceDefaultPromoMinorActive
    public let surfaceDefaultPromoMinorHover = ColorToken.surfaceDefaultPromoMinorHover
    public let surfaceDefaultSolidCard = ColorToken.surfaceDefaultSolidCard
    public let surfaceDefaultSolidCardActive = ColorToken.surfaceDefaultSolidCardActive
    public let surfaceDefaultSolidCardHover = ColorToken.surfaceDefaultSolidCardHover
    public let surfaceDefaultSolidDefault = ColorToken.surfaceDefaultSolidDefault
    public let surfaceDefaultSolidDefaultActive = ColorToken.surfaceDefaultSolidDefaultActive
    public let surfaceDefaultSolidDefaultHover = ColorToken.surfaceDefaultSolidDefaultHover
    public let surfaceDefaultSolidPrimary = ColorToken.surfaceDefaultSolidPrimary
    public let surfaceDefaultSolidPrimaryActive = ColorToken.surfaceDefaultSolidPrimaryActive
    public let surfaceDefaultSolidPrimaryHover = ColorToken.surfaceDefaultSolidPrimaryHover
    public let surfaceDefaultSolidSecondary = ColorToken.surfaceDefaultSolidSecondary
    public let surfaceDefaultSolidSecondaryActive = ColorToken.surfaceDefaultSolidSecondaryActive
    public let surfaceDefaultSolidSecondaryHover = ColorToken.surfaceDefaultSolidSecondaryHover
    public let surfaceDefaultSolidTertiary = ColorToken.surfaceDefaultSolidTertiary
    public let surfaceDefaultSolidTertiaryActive = ColorToken.surfaceDefaultSolidTertiaryActive
    public let surfaceDefaultSolidTertiaryHover = ColorToken.surfaceDefaultSolidTertiaryHover
    public let surfaceDefaultTransparentAccent = ColorToken.surfaceDefaultTransparentAccent
    public let surfaceDefaultTransparentAccentActive = ColorToken.surfaceDefaultTransparentAccentActive
    public let surfaceDefaultTransparentAccentHover = ColorToken.surfaceDefaultTransparentAccentHover
    public let surfaceDefaultTransparentCard = ColorToken.surfaceDefaultTransparentCard
    public let surfaceDefaultTransparentCardActive = ColorToken.surfaceDefaultTransparentCardActive
    public let surfaceDefaultTransparentCardHover = ColorToken.surfaceDefaultTransparentCardHover
    public let surfaceDefaultTransparentDeep = ColorToken.surfaceDefaultTransparentDeep
    public let surfaceDefaultTransparentDeepActive = ColorToken.surfaceDefaultTransparentDeepActive
    public let surfaceDefaultTransparentDeepHover = ColorToken.surfaceDefaultTransparentDeepHover
    public let surfaceDefaultTransparentDefault = ColorToken.surfaceDefaultTransparentDefault
    public let surfaceDefaultTransparentDefaultActive = ColorToken.surfaceDefaultTransparentDefaultActive
    public let surfaceDefaultTransparentDefaultHover = ColorToken.surfaceDefaultTransparentDefaultHover
    public let surfaceDefaultTransparentInfo = ColorToken.surfaceDefaultTransparentInfo
    public let surfaceDefaultTransparentInfoActive = ColorToken.surfaceDefaultTransparentInfoActive
    public let surfaceDefaultTransparentInfoHover = ColorToken.surfaceDefaultTransparentInfoHover
    public let surfaceDefaultTransparentNegative = ColorToken.surfaceDefaultTransparentNegative
    public let surfaceDefaultTransparentNegativeActive = ColorToken.surfaceDefaultTransparentNegativeActive
    public let surfaceDefaultTransparentNegativeHover = ColorToken.surfaceDefaultTransparentNegativeHover
    public let surfaceDefaultTransparentPositive = ColorToken.surfaceDefaultTransparentPositive
    public let surfaceDefaultTransparentPositiveActive = ColorToken.surfaceDefaultTransparentPositiveActive
    public let surfaceDefaultTransparentPositiveHover = ColorToken.surfaceDefaultTransparentPositiveHover
    public let surfaceDefaultTransparentPrimary = ColorToken.surfaceDefaultTransparentPrimary
    public let surfaceDefaultTransparentPrimaryActive = ColorToken.surfaceDefaultTransparentPrimaryActive
    public let surfaceDefaultTransparentPrimaryHover = ColorToken.surfaceDefaultTransparentPrimaryHover
    public let surfaceDefaultTransparentPromo = ColorToken.surfaceDefaultTransparentPromo
    public let surfaceDefaultTransparentPromoActive = ColorToken.surfaceDefaultTransparentPromoActive
    public let surfaceDefaultTransparentPromoHover = ColorToken.surfaceDefaultTransparentPromoHover
    public let surfaceDefaultTransparentSecondary = ColorToken.surfaceDefaultTransparentSecondary
    public let surfaceDefaultTransparentSecondaryActive = ColorToken.surfaceDefaultTransparentSecondaryActive
    public let surfaceDefaultTransparentSecondaryHover = ColorToken.surfaceDefaultTransparentSecondaryHover
    public let surfaceDefaultTransparentTertiary = ColorToken.surfaceDefaultTransparentTertiary
    public let surfaceDefaultTransparentTertiaryActive = ColorToken.surfaceDefaultTransparentTertiaryActive
    public let surfaceDefaultTransparentTertiaryHover = ColorToken.surfaceDefaultTransparentTertiaryHover
    public let surfaceDefaultTransparentWarning = ColorToken.surfaceDefaultTransparentWarning
    public let surfaceDefaultTransparentWarningActive = ColorToken.surfaceDefaultTransparentWarningActive
    public let surfaceDefaultTransparentWarningHover = ColorToken.surfaceDefaultTransparentWarningHover
    public let surfaceDefaultWarning = ColorToken.surfaceDefaultWarning
    public let surfaceDefaultWarningActive = ColorToken.surfaceDefaultWarningActive
    public let surfaceDefaultWarningHover = ColorToken.surfaceDefaultWarningHover
    public let surfaceDefaultWarningMinor = ColorToken.surfaceDefaultWarningMinor
    public let surfaceDefaultWarningMinorActive = ColorToken.surfaceDefaultWarningMinorActive
    public let surfaceDefaultWarningMinorHover = ColorToken.surfaceDefaultWarningMinorHover
    public let surfaceInverseAccent = ColorToken.surfaceInverseAccent
    public let surfaceInverseAccentActive = ColorToken.surfaceInverseAccentActive
    public let surfaceInverseAccentHover = ColorToken.surfaceInverseAccentHover
    public let surfaceInverseAccentMinor = ColorToken.surfaceInverseAccentMinor
    public let surfaceInverseAccentMinorActive = ColorToken.surfaceInverseAccentMinorActive
    public let surfaceInverseAccentMinorHover = ColorToken.surfaceInverseAccentMinorHover
    public let surfaceInverseClear = ColorToken.surfaceInverseClear
    public let surfaceInverseClearActive = ColorToken.surfaceInverseClearActive
    public let surfaceInverseClearHover = ColorToken.surfaceInverseClearHover
    public let surfaceInverseInfo = ColorToken.surfaceInverseInfo
    public let surfaceInverseInfoActive = ColorToken.surfaceInverseInfoActive
    public let surfaceInverseInfoHover = ColorToken.surfaceInverseInfoHover
    public let surfaceInverseInfoMinor = ColorToken.surfaceInverseInfoMinor
    public let surfaceInverseInfoMinorActive = ColorToken.surfaceInverseInfoMinorActive
    public let surfaceInverseInfoMinorHover = ColorToken.surfaceInverseInfoMinorHover
    public let surfaceInverseNegative = ColorToken.surfaceInverseNegative
    public let surfaceInverseNegativeActive = ColorToken.surfaceInverseNegativeActive
    public let surfaceInverseNegativeHover = ColorToken.surfaceInverseNegativeHover
    public let surfaceInverseNegativeMinor = ColorToken.surfaceInverseNegativeMinor
    public let surfaceInverseNegativeMinorActive = ColorToken.surfaceInverseNegativeMinorActive
    public let surfaceInverseNegativeMinorHover = ColorToken.surfaceInverseNegativeMinorHover
    public let surfaceInversePositive = ColorToken.surfaceInversePositive
    public let surfaceInversePositiveActive = ColorToken.surfaceInversePositiveActive
    public let surfaceInversePositiveHover = ColorToken.surfaceInversePositiveHover
    public let surfaceInversePositiveMinor = ColorToken.surfaceInversePositiveMinor
    public let surfaceInversePositiveMinorActive = ColorToken.surfaceInversePositiveMinorActive
    public let surfaceInversePositiveMinorHover = ColorToken.surfaceInversePositiveMinorHover
    public let surfaceInversePromo = ColorToken.surfaceInversePromo
    public let surfaceInversePromoActive = ColorToken.surfaceInversePromoActive
    public let surfaceInversePromoHover = ColorToken.surfaceInversePromoHover
    public let surfaceInversePromoMinor = ColorToken.surfaceInversePromoMinor
    public let surfaceInversePromoMinorActive = ColorToken.surfaceInversePromoMinorActive
    public let surfaceInversePromoMinorHover = ColorToken.surfaceInversePromoMinorHover
    public let surfaceInverseSolidCard = ColorToken.surfaceInverseSolidCard
    public let surfaceInverseSolidCardActive = ColorToken.surfaceInverseSolidCardActive
    public let surfaceInverseSolidCardHover = ColorToken.surfaceInverseSolidCardHover
    public let surfaceInverseSolidDefault = ColorToken.surfaceInverseSolidDefault
    public let surfaceInverseSolidDefaultActive = ColorToken.surfaceInverseSolidDefaultActive
    public let surfaceInverseSolidDefaultHover = ColorToken.surfaceInverseSolidDefaultHover
    public let surfaceInverseSolidPrimary = ColorToken.surfaceInverseSolidPrimary
    public let surfaceInverseSolidPrimaryActive = ColorToken.surfaceInverseSolidPrimaryActive
    public let surfaceInverseSolidPrimaryHover = ColorToken.surfaceInverseSolidPrimaryHover
    public let surfaceInverseSolidSecondary = ColorToken.surfaceInverseSolidSecondary
    public let surfaceInverseSolidSecondaryActive = ColorToken.surfaceInverseSolidSecondaryActive
    public let surfaceInverseSolidSecondaryHover = ColorToken.surfaceInverseSolidSecondaryHover
    public let surfaceInverseSolidTertiary = ColorToken.surfaceInverseSolidTertiary
    public let surfaceInverseSolidTertiaryActive = ColorToken.surfaceInverseSolidTertiaryActive
    public let surfaceInverseSolidTertiaryHover = ColorToken.surfaceInverseSolidTertiaryHover
    public let surfaceInverseTransparentAccent = ColorToken.surfaceInverseTransparentAccent
    public let surfaceInverseTransparentAccentActive = ColorToken.surfaceInverseTransparentAccentActive
    public let surfaceInverseTransparentAccentHover = ColorToken.surfaceInverseTransparentAccentHover
    public let surfaceInverseTransparentCard = ColorToken.surfaceInverseTransparentCard
    public let surfaceInverseTransparentCardActive = ColorToken.surfaceInverseTransparentCardActive
    public let surfaceInverseTransparentCardHover = ColorToken.surfaceInverseTransparentCardHover
    public let surfaceInverseTransparentDeep = ColorToken.surfaceInverseTransparentDeep
    public let surfaceInverseTransparentDeepActive = ColorToken.surfaceInverseTransparentDeepActive
    public let surfaceInverseTransparentDeepHover = ColorToken.surfaceInverseTransparentDeepHover
    public let surfaceInverseTransparentDefault = ColorToken.surfaceInverseTransparentDefault
    public let surfaceInverseTransparentDefaultActive = ColorToken.surfaceInverseTransparentDefaultActive
    public let surfaceInverseTransparentDefaultHover = ColorToken.surfaceInverseTransparentDefaultHover
    public let surfaceInverseTransparentInfo = ColorToken.surfaceInverseTransparentInfo
    public let surfaceInverseTransparentInfoActive = ColorToken.surfaceInverseTransparentInfoActive
    public let surfaceInverseTransparentInfoHover = ColorToken.surfaceInverseTransparentInfoHover
    public let surfaceInverseTransparentNegative = ColorToken.surfaceInverseTransparentNegative
    public let surfaceInverseTransparentNegativeActive = ColorToken.surfaceInverseTransparentNegativeActive
    public let surfaceInverseTransparentNegativeHover = ColorToken.surfaceInverseTransparentNegativeHover
    public let surfaceInverseTransparentPositive = ColorToken.surfaceInverseTransparentPositive
    public let surfaceInverseTransparentPositiveActive = ColorToken.surfaceInverseTransparentPositiveActive
    public let surfaceInverseTransparentPositiveHover = ColorToken.surfaceInverseTransparentPositiveHover
    public let surfaceInverseTransparentPrimary = ColorToken.surfaceInverseTransparentPrimary
    public let surfaceInverseTransparentPrimaryActive = ColorToken.surfaceInverseTransparentPrimaryActive
    public let surfaceInverseTransparentPrimaryHover = ColorToken.surfaceInverseTransparentPrimaryHover
    public let surfaceInverseTransparentPromo = ColorToken.surfaceInverseTransparentPromo
    public let surfaceInverseTransparentPromoActive = ColorToken.surfaceInverseTransparentPromoActive
    public let surfaceInverseTransparentPromoHover = ColorToken.surfaceInverseTransparentPromoHover
    public let surfaceInverseTransparentSecondary = ColorToken.surfaceInverseTransparentSecondary
    public let surfaceInverseTransparentSecondaryActive = ColorToken.surfaceInverseTransparentSecondaryActive
    public let surfaceInverseTransparentSecondaryHover = ColorToken.surfaceInverseTransparentSecondaryHover
    public let surfaceInverseTransparentTertiary = ColorToken.surfaceInverseTransparentTertiary
    public let surfaceInverseTransparentTertiaryActive = ColorToken.surfaceInverseTransparentTertiaryActive
    public let surfaceInverseTransparentTertiaryHover = ColorToken.surfaceInverseTransparentTertiaryHover
    public let surfaceInverseTransparentWarning = ColorToken.surfaceInverseTransparentWarning
    public let surfaceInverseTransparentWarningActive = ColorToken.surfaceInverseTransparentWarningActive
    public let surfaceInverseTransparentWarningHover = ColorToken.surfaceInverseTransparentWarningHover
    public let surfaceInverseWarning = ColorToken.surfaceInverseWarning
    public let surfaceInverseWarningActive = ColorToken.surfaceInverseWarningActive
    public let surfaceInverseWarningHover = ColorToken.surfaceInverseWarningHover
    public let surfaceInverseWarningMinor = ColorToken.surfaceInverseWarningMinor
    public let surfaceInverseWarningMinorActive = ColorToken.surfaceInverseWarningMinorActive
    public let surfaceInverseWarningMinorHover = ColorToken.surfaceInverseWarningMinorHover
    public let surfaceOnDarkAccent = ColorToken.surfaceOnDarkAccent
    public let surfaceOnDarkAccentActive = ColorToken.surfaceOnDarkAccentActive
    public let surfaceOnDarkAccentHover = ColorToken.surfaceOnDarkAccentHover
    public let surfaceOnDarkAccentMinor = ColorToken.surfaceOnDarkAccentMinor
    public let surfaceOnDarkAccentMinorActive = ColorToken.surfaceOnDarkAccentMinorActive
    public let surfaceOnDarkAccentMinorHover = ColorToken.surfaceOnDarkAccentMinorHover
    public let surfaceOnDarkClear = ColorToken.surfaceOnDarkClear
    public let surfaceOnDarkClearActive = ColorToken.surfaceOnDarkClearActive
    public let surfaceOnDarkClearHover = ColorToken.surfaceOnDarkClearHover
    public let surfaceOnDarkInfo = ColorToken.surfaceOnDarkInfo
    public let surfaceOnDarkInfoActive = ColorToken.surfaceOnDarkInfoActive
    public let surfaceOnDarkInfoHover = ColorToken.surfaceOnDarkInfoHover
    public let surfaceOnDarkInfoMinor = ColorToken.surfaceOnDarkInfoMinor
    public let surfaceOnDarkInfoMinorActive = ColorToken.surfaceOnDarkInfoMinorActive
    public let surfaceOnDarkInfoMinorHover = ColorToken.surfaceOnDarkInfoMinorHover
    public let surfaceOnDarkNegative = ColorToken.surfaceOnDarkNegative
    public let surfaceOnDarkNegativeActive = ColorToken.surfaceOnDarkNegativeActive
    public let surfaceOnDarkNegativeHover = ColorToken.surfaceOnDarkNegativeHover
    public let surfaceOnDarkNegativeMinor = ColorToken.surfaceOnDarkNegativeMinor
    public let surfaceOnDarkNegativeMinorActive = ColorToken.surfaceOnDarkNegativeMinorActive
    public let surfaceOnDarkNegativeMinorHover = ColorToken.surfaceOnDarkNegativeMinorHover
    public let surfaceOnDarkPositive = ColorToken.surfaceOnDarkPositive
    public let surfaceOnDarkPositiveActive = ColorToken.surfaceOnDarkPositiveActive
    public let surfaceOnDarkPositiveHover = ColorToken.surfaceOnDarkPositiveHover
    public let surfaceOnDarkPositiveMinor = ColorToken.surfaceOnDarkPositiveMinor
    public let surfaceOnDarkPositiveMinorActive = ColorToken.surfaceOnDarkPositiveMinorActive
    public let surfaceOnDarkPositiveMinorHover = ColorToken.surfaceOnDarkPositiveMinorHover
    public let surfaceOnDarkPromo = ColorToken.surfaceOnDarkPromo
    public let surfaceOnDarkPromoActive = ColorToken.surfaceOnDarkPromoActive
    public let surfaceOnDarkPromoHover = ColorToken.surfaceOnDarkPromoHover
    public let surfaceOnDarkPromoMinor = ColorToken.surfaceOnDarkPromoMinor
    public let surfaceOnDarkPromoMinorActive = ColorToken.surfaceOnDarkPromoMinorActive
    public let surfaceOnDarkPromoMinorHover = ColorToken.surfaceOnDarkPromoMinorHover
    public let surfaceOnDarkSolidCard = ColorToken.surfaceOnDarkSolidCard
    public let surfaceOnDarkSolidCardActive = ColorToken.surfaceOnDarkSolidCardActive
    public let surfaceOnDarkSolidCardHover = ColorToken.surfaceOnDarkSolidCardHover
    public let surfaceOnDarkSolidDefault = ColorToken.surfaceOnDarkSolidDefault
    public let surfaceOnDarkSolidDefaultActive = ColorToken.surfaceOnDarkSolidDefaultActive
    public let surfaceOnDarkSolidDefaultHover = ColorToken.surfaceOnDarkSolidDefaultHover
    public let surfaceOnDarkSolidPrimary = ColorToken.surfaceOnDarkSolidPrimary
    public let surfaceOnDarkSolidPrimaryActive = ColorToken.surfaceOnDarkSolidPrimaryActive
    public let surfaceOnDarkSolidPrimaryHover = ColorToken.surfaceOnDarkSolidPrimaryHover
    public let surfaceOnDarkSolidSecondary = ColorToken.surfaceOnDarkSolidSecondary
    public let surfaceOnDarkSolidSecondaryActive = ColorToken.surfaceOnDarkSolidSecondaryActive
    public let surfaceOnDarkSolidSecondaryHover = ColorToken.surfaceOnDarkSolidSecondaryHover
    public let surfaceOnDarkSolidTertiary = ColorToken.surfaceOnDarkSolidTertiary
    public let surfaceOnDarkSolidTertiaryActive = ColorToken.surfaceOnDarkSolidTertiaryActive
    public let surfaceOnDarkSolidTertiaryHover = ColorToken.surfaceOnDarkSolidTertiaryHover
    public let surfaceOnDarkTransparentAccent = ColorToken.surfaceOnDarkTransparentAccent
    public let surfaceOnDarkTransparentAccentActive = ColorToken.surfaceOnDarkTransparentAccentActive
    public let surfaceOnDarkTransparentAccentHover = ColorToken.surfaceOnDarkTransparentAccentHover
    public let surfaceOnDarkTransparentCard = ColorToken.surfaceOnDarkTransparentCard
    public let surfaceOnDarkTransparentCardActive = ColorToken.surfaceOnDarkTransparentCardActive
    public let surfaceOnDarkTransparentCardHover = ColorToken.surfaceOnDarkTransparentCardHover
    public let surfaceOnDarkTransparentDeep = ColorToken.surfaceOnDarkTransparentDeep
    public let surfaceOnDarkTransparentDeepActive = ColorToken.surfaceOnDarkTransparentDeepActive
    public let surfaceOnDarkTransparentDeepHover = ColorToken.surfaceOnDarkTransparentDeepHover
    public let surfaceOnDarkTransparentDefault = ColorToken.surfaceOnDarkTransparentDefault
    public let surfaceOnDarkTransparentDefaultActive = ColorToken.surfaceOnDarkTransparentDefaultActive
    public let surfaceOnDarkTransparentDefaultHover = ColorToken.surfaceOnDarkTransparentDefaultHover
    public let surfaceOnDarkTransparentInfo = ColorToken.surfaceOnDarkTransparentInfo
    public let surfaceOnDarkTransparentInfoActive = ColorToken.surfaceOnDarkTransparentInfoActive
    public let surfaceOnDarkTransparentInfoHover = ColorToken.surfaceOnDarkTransparentInfoHover
    public let surfaceOnDarkTransparentNegative = ColorToken.surfaceOnDarkTransparentNegative
    public let surfaceOnDarkTransparentNegativeActive = ColorToken.surfaceOnDarkTransparentNegativeActive
    public let surfaceOnDarkTransparentNegativeHover = ColorToken.surfaceOnDarkTransparentNegativeHover
    public let surfaceOnDarkTransparentPositive = ColorToken.surfaceOnDarkTransparentPositive
    public let surfaceOnDarkTransparentPositiveActive = ColorToken.surfaceOnDarkTransparentPositiveActive
    public let surfaceOnDarkTransparentPositiveHover = ColorToken.surfaceOnDarkTransparentPositiveHover
    public let surfaceOnDarkTransparentPrimary = ColorToken.surfaceOnDarkTransparentPrimary
    public let surfaceOnDarkTransparentPrimaryActive = ColorToken.surfaceOnDarkTransparentPrimaryActive
    public let surfaceOnDarkTransparentPrimaryHover = ColorToken.surfaceOnDarkTransparentPrimaryHover
    public let surfaceOnDarkTransparentPromo = ColorToken.surfaceOnDarkTransparentPromo
    public let surfaceOnDarkTransparentPromoActive = ColorToken.surfaceOnDarkTransparentPromoActive
    public let surfaceOnDarkTransparentPromoHover = ColorToken.surfaceOnDarkTransparentPromoHover
    public let surfaceOnDarkTransparentSecondary = ColorToken.surfaceOnDarkTransparentSecondary
    public let surfaceOnDarkTransparentSecondaryActive = ColorToken.surfaceOnDarkTransparentSecondaryActive
    public let surfaceOnDarkTransparentSecondaryHover = ColorToken.surfaceOnDarkTransparentSecondaryHover
    public let surfaceOnDarkTransparentTertiary = ColorToken.surfaceOnDarkTransparentTertiary
    public let surfaceOnDarkTransparentTertiaryActive = ColorToken.surfaceOnDarkTransparentTertiaryActive
    public let surfaceOnDarkTransparentTertiaryHover = ColorToken.surfaceOnDarkTransparentTertiaryHover
    public let surfaceOnDarkTransparentWarning = ColorToken.surfaceOnDarkTransparentWarning
    public let surfaceOnDarkTransparentWarningActive = ColorToken.surfaceOnDarkTransparentWarningActive
    public let surfaceOnDarkTransparentWarningHover = ColorToken.surfaceOnDarkTransparentWarningHover
    public let surfaceOnDarkWarning = ColorToken.surfaceOnDarkWarning
    public let surfaceOnDarkWarningActive = ColorToken.surfaceOnDarkWarningActive
    public let surfaceOnDarkWarningHover = ColorToken.surfaceOnDarkWarningHover
    public let surfaceOnDarkWarningMinor = ColorToken.surfaceOnDarkWarningMinor
    public let surfaceOnDarkWarningMinorActive = ColorToken.surfaceOnDarkWarningMinorActive
    public let surfaceOnDarkWarningMinorHover = ColorToken.surfaceOnDarkWarningMinorHover
    public let surfaceOnLightAccent = ColorToken.surfaceOnLightAccent
    public let surfaceOnLightAccentActive = ColorToken.surfaceOnLightAccentActive
    public let surfaceOnLightAccentHover = ColorToken.surfaceOnLightAccentHover
    public let surfaceOnLightAccentMinor = ColorToken.surfaceOnLightAccentMinor
    public let surfaceOnLightAccentMinorActive = ColorToken.surfaceOnLightAccentMinorActive
    public let surfaceOnLightAccentMinorHover = ColorToken.surfaceOnLightAccentMinorHover
    public let surfaceOnLightClear = ColorToken.surfaceOnLightClear
    public let surfaceOnLightClearActive = ColorToken.surfaceOnLightClearActive
    public let surfaceOnLightClearHover = ColorToken.surfaceOnLightClearHover
    public let surfaceOnLightInfo = ColorToken.surfaceOnLightInfo
    public let surfaceOnLightInfoActive = ColorToken.surfaceOnLightInfoActive
    public let surfaceOnLightInfoHover = ColorToken.surfaceOnLightInfoHover
    public let surfaceOnLightInfoMinor = ColorToken.surfaceOnLightInfoMinor
    public let surfaceOnLightInfoMinorActive = ColorToken.surfaceOnLightInfoMinorActive
    public let surfaceOnLightInfoMinorHover = ColorToken.surfaceOnLightInfoMinorHover
    public let surfaceOnLightNegative = ColorToken.surfaceOnLightNegative
    public let surfaceOnLightNegativeActive = ColorToken.surfaceOnLightNegativeActive
    public let surfaceOnLightNegativeHover = ColorToken.surfaceOnLightNegativeHover
    public let surfaceOnLightNegativeMinor = ColorToken.surfaceOnLightNegativeMinor
    public let surfaceOnLightNegativeMinorActive = ColorToken.surfaceOnLightNegativeMinorActive
    public let surfaceOnLightNegativeMinorHover = ColorToken.surfaceOnLightNegativeMinorHover
    public let surfaceOnLightPositive = ColorToken.surfaceOnLightPositive
    public let surfaceOnLightPositiveActive = ColorToken.surfaceOnLightPositiveActive
    public let surfaceOnLightPositiveHover = ColorToken.surfaceOnLightPositiveHover
    public let surfaceOnLightPositiveMinor = ColorToken.surfaceOnLightPositiveMinor
    public let surfaceOnLightPositiveMinorActive = ColorToken.surfaceOnLightPositiveMinorActive
    public let surfaceOnLightPositiveMinorHover = ColorToken.surfaceOnLightPositiveMinorHover
    public let surfaceOnLightPromo = ColorToken.surfaceOnLightPromo
    public let surfaceOnLightPromoActive = ColorToken.surfaceOnLightPromoActive
    public let surfaceOnLightPromoHover = ColorToken.surfaceOnLightPromoHover
    public let surfaceOnLightPromoMinor = ColorToken.surfaceOnLightPromoMinor
    public let surfaceOnLightPromoMinorActive = ColorToken.surfaceOnLightPromoMinorActive
    public let surfaceOnLightPromoMinorHover = ColorToken.surfaceOnLightPromoMinorHover
    public let surfaceOnLightSolidCard = ColorToken.surfaceOnLightSolidCard
    public let surfaceOnLightSolidCardActive = ColorToken.surfaceOnLightSolidCardActive
    public let surfaceOnLightSolidCardHover = ColorToken.surfaceOnLightSolidCardHover
    public let surfaceOnLightSolidDefault = ColorToken.surfaceOnLightSolidDefault
    public let surfaceOnLightSolidDefaultActive = ColorToken.surfaceOnLightSolidDefaultActive
    public let surfaceOnLightSolidDefaultHover = ColorToken.surfaceOnLightSolidDefaultHover
    public let surfaceOnLightSolidPrimary = ColorToken.surfaceOnLightSolidPrimary
    public let surfaceOnLightSolidPrimaryActive = ColorToken.surfaceOnLightSolidPrimaryActive
    public let surfaceOnLightSolidPrimaryHover = ColorToken.surfaceOnLightSolidPrimaryHover
    public let surfaceOnLightSolidSecondary = ColorToken.surfaceOnLightSolidSecondary
    public let surfaceOnLightSolidSecondaryActive = ColorToken.surfaceOnLightSolidSecondaryActive
    public let surfaceOnLightSolidSecondaryHover = ColorToken.surfaceOnLightSolidSecondaryHover
    public let surfaceOnLightSolidTertiary = ColorToken.surfaceOnLightSolidTertiary
    public let surfaceOnLightSolidTertiaryActive = ColorToken.surfaceOnLightSolidTertiaryActive
    public let surfaceOnLightSolidTertiaryHover = ColorToken.surfaceOnLightSolidTertiaryHover
    public let surfaceOnLightTransparentAccent = ColorToken.surfaceOnLightTransparentAccent
    public let surfaceOnLightTransparentAccentActive = ColorToken.surfaceOnLightTransparentAccentActive
    public let surfaceOnLightTransparentAccentHover = ColorToken.surfaceOnLightTransparentAccentHover
    public let surfaceOnLightTransparentCard = ColorToken.surfaceOnLightTransparentCard
    public let surfaceOnLightTransparentCardActive = ColorToken.surfaceOnLightTransparentCardActive
    public let surfaceOnLightTransparentCardHover = ColorToken.surfaceOnLightTransparentCardHover
    public let surfaceOnLightTransparentDeep = ColorToken.surfaceOnLightTransparentDeep
    public let surfaceOnLightTransparentDeepActive = ColorToken.surfaceOnLightTransparentDeepActive
    public let surfaceOnLightTransparentDeepHover = ColorToken.surfaceOnLightTransparentDeepHover
    public let surfaceOnLightTransparentDefault = ColorToken.surfaceOnLightTransparentDefault
    public let surfaceOnLightTransparentDefaultActive = ColorToken.surfaceOnLightTransparentDefaultActive
    public let surfaceOnLightTransparentDefaultHover = ColorToken.surfaceOnLightTransparentDefaultHover
    public let surfaceOnLightTransparentInfo = ColorToken.surfaceOnLightTransparentInfo
    public let surfaceOnLightTransparentInfoActive = ColorToken.surfaceOnLightTransparentInfoActive
    public let surfaceOnLightTransparentInfoHover = ColorToken.surfaceOnLightTransparentInfoHover
    public let surfaceOnLightTransparentNegative = ColorToken.surfaceOnLightTransparentNegative
    public let surfaceOnLightTransparentNegativeActive = ColorToken.surfaceOnLightTransparentNegativeActive
    public let surfaceOnLightTransparentNegativeHover = ColorToken.surfaceOnLightTransparentNegativeHover
    public let surfaceOnLightTransparentPositive = ColorToken.surfaceOnLightTransparentPositive
    public let surfaceOnLightTransparentPositiveActive = ColorToken.surfaceOnLightTransparentPositiveActive
    public let surfaceOnLightTransparentPositiveHover = ColorToken.surfaceOnLightTransparentPositiveHover
    public let surfaceOnLightTransparentPrimary = ColorToken.surfaceOnLightTransparentPrimary
    public let surfaceOnLightTransparentPrimaryActive = ColorToken.surfaceOnLightTransparentPrimaryActive
    public let surfaceOnLightTransparentPrimaryHover = ColorToken.surfaceOnLightTransparentPrimaryHover
    public let surfaceOnLightTransparentPromo = ColorToken.surfaceOnLightTransparentPromo
    public let surfaceOnLightTransparentPromoActive = ColorToken.surfaceOnLightTransparentPromoActive
    public let surfaceOnLightTransparentPromoHover = ColorToken.surfaceOnLightTransparentPromoHover
    public let surfaceOnLightTransparentSecondary = ColorToken.surfaceOnLightTransparentSecondary
    public let surfaceOnLightTransparentSecondaryActive = ColorToken.surfaceOnLightTransparentSecondaryActive
    public let surfaceOnLightTransparentSecondaryHover = ColorToken.surfaceOnLightTransparentSecondaryHover
    public let surfaceOnLightTransparentTertiary = ColorToken.surfaceOnLightTransparentTertiary
    public let surfaceOnLightTransparentTertiaryActive = ColorToken.surfaceOnLightTransparentTertiaryActive
    public let surfaceOnLightTransparentTertiaryHover = ColorToken.surfaceOnLightTransparentTertiaryHover
    public let surfaceOnLightTransparentWarning = ColorToken.surfaceOnLightTransparentWarning
    public let surfaceOnLightTransparentWarningActive = ColorToken.surfaceOnLightTransparentWarningActive
    public let surfaceOnLightTransparentWarningHover = ColorToken.surfaceOnLightTransparentWarningHover
    public let surfaceOnLightWarning = ColorToken.surfaceOnLightWarning
    public let surfaceOnLightWarningActive = ColorToken.surfaceOnLightWarningActive
    public let surfaceOnLightWarningHover = ColorToken.surfaceOnLightWarningHover
    public let surfaceOnLightWarningMinor = ColorToken.surfaceOnLightWarningMinor
    public let surfaceOnLightWarningMinorActive = ColorToken.surfaceOnLightWarningMinorActive
    public let surfaceOnLightWarningMinorHover = ColorToken.surfaceOnLightWarningMinorHover
    public let textDefaultAccent = ColorToken.textDefaultAccent
    public let textDefaultAccentActive = ColorToken.textDefaultAccentActive
    public let textDefaultAccentHover = ColorToken.textDefaultAccentHover
    public let textDefaultAccentMinor = ColorToken.textDefaultAccentMinor
    public let textDefaultAccentMinorActive = ColorToken.textDefaultAccentMinorActive
    public let textDefaultAccentMinorHover = ColorToken.textDefaultAccentMinorHover
    public let textDefaultInfo = ColorToken.textDefaultInfo
    public let textDefaultInfoActive = ColorToken.textDefaultInfoActive
    public let textDefaultInfoHover = ColorToken.textDefaultInfoHover
    public let textDefaultInfoMinor = ColorToken.textDefaultInfoMinor
    public let textDefaultInfoMinorActive = ColorToken.textDefaultInfoMinorActive
    public let textDefaultInfoMinorHover = ColorToken.textDefaultInfoMinorHover
    public let textDefaultNegative = ColorToken.textDefaultNegative
    public let textDefaultNegativeActive = ColorToken.textDefaultNegativeActive
    public let textDefaultNegativeHover = ColorToken.textDefaultNegativeHover
    public let textDefaultNegativeMinor = ColorToken.textDefaultNegativeMinor
    public let textDefaultNegativeMinorActive = ColorToken.textDefaultNegativeMinorActive
    public let textDefaultNegativeMinorHover = ColorToken.textDefaultNegativeMinorHover
    public let textDefaultParagraph = ColorToken.textDefaultParagraph
    public let textDefaultParagraphActive = ColorToken.textDefaultParagraphActive
    public let textDefaultParagraphHover = ColorToken.textDefaultParagraphHover
    public let textDefaultPositive = ColorToken.textDefaultPositive
    public let textDefaultPositiveActive = ColorToken.textDefaultPositiveActive
    public let textDefaultPositiveHover = ColorToken.textDefaultPositiveHover
    public let textDefaultPositiveMinor = ColorToken.textDefaultPositiveMinor
    public let textDefaultPositiveMinorActive = ColorToken.textDefaultPositiveMinorActive
    public let textDefaultPositiveMinorHover = ColorToken.textDefaultPositiveMinorHover
    public let textDefaultPrimary = ColorToken.textDefaultPrimary
    public let textDefaultPrimaryActive = ColorToken.textDefaultPrimaryActive
    public let textDefaultPrimaryHover = ColorToken.textDefaultPrimaryHover
    public let textDefaultPromo = ColorToken.textDefaultPromo
    public let textDefaultPromoActive = ColorToken.textDefaultPromoActive
    public let textDefaultPromoHover = ColorToken.textDefaultPromoHover
    public let textDefaultPromoMinor = ColorToken.textDefaultPromoMinor
    public let textDefaultPromoMinorActive = ColorToken.textDefaultPromoMinorActive
    public let textDefaultPromoMinorHover = ColorToken.textDefaultPromoMinorHover
    public let textDefaultSecondary = ColorToken.textDefaultSecondary
    public let textDefaultSecondaryActive = ColorToken.textDefaultSecondaryActive
    public let textDefaultSecondaryHover = ColorToken.textDefaultSecondaryHover
    public let textDefaultTertiary = ColorToken.textDefaultTertiary
    public let textDefaultTertiaryActive = ColorToken.textDefaultTertiaryActive
    public let textDefaultTertiaryHover = ColorToken.textDefaultTertiaryHover
    public let textDefaultWarning = ColorToken.textDefaultWarning
    public let textDefaultWarningActive = ColorToken.textDefaultWarningActive
    public let textDefaultWarningHover = ColorToken.textDefaultWarningHover
    public let textDefaultWarningMinor = ColorToken.textDefaultWarningMinor
    public let textDefaultWarningMinorActive = ColorToken.textDefaultWarningMinorActive
    public let textDefaultWarningMinorHover = ColorToken.textDefaultWarningMinorHover
    public let textInverseAccent = ColorToken.textInverseAccent
    public let textInverseAccentActive = ColorToken.textInverseAccentActive
    public let textInverseAccentHover = ColorToken.textInverseAccentHover
    public let textInverseAccentMinor = ColorToken.textInverseAccentMinor
    public let textInverseAccentMinorActive = ColorToken.textInverseAccentMinorActive
    public let textInverseAccentMinorHover = ColorToken.textInverseAccentMinorHover
    public let textInverseInfo = ColorToken.textInverseInfo
    public let textInverseInfoActive = ColorToken.textInverseInfoActive
    public let textInverseInfoHover = ColorToken.textInverseInfoHover
    public let textInverseInfoMinor = ColorToken.textInverseInfoMinor
    public let textInverseInfoMinorActive = ColorToken.textInverseInfoMinorActive
    public let textInverseInfoMinorHover = ColorToken.textInverseInfoMinorHover
    public let textInverseNegative = ColorToken.textInverseNegative
    public let textInverseNegativeActive = ColorToken.textInverseNegativeActive
    public let textInverseNegativeHover = ColorToken.textInverseNegativeHover
    public let textInverseNegativeMinor = ColorToken.textInverseNegativeMinor
    public let textInverseNegativeMinorActive = ColorToken.textInverseNegativeMinorActive
    public let textInverseNegativeMinorHover = ColorToken.textInverseNegativeMinorHover
    public let textInverseParagraph = ColorToken.textInverseParagraph
    public let textInverseParagraphActive = ColorToken.textInverseParagraphActive
    public let textInverseParagraphHover = ColorToken.textInverseParagraphHover
    public let textInversePositive = ColorToken.textInversePositive
    public let textInversePositiveActive = ColorToken.textInversePositiveActive
    public let textInversePositiveHover = ColorToken.textInversePositiveHover
    public let textInversePositiveMinor = ColorToken.textInversePositiveMinor
    public let textInversePositiveMinorActive = ColorToken.textInversePositiveMinorActive
    public let textInversePositiveMinorHover = ColorToken.textInversePositiveMinorHover
    public let textInversePrimary = ColorToken.textInversePrimary
    public let textInversePrimaryActive = ColorToken.textInversePrimaryActive
    public let textInversePrimaryHover = ColorToken.textInversePrimaryHover
    public let textInversePromo = ColorToken.textInversePromo
    public let textInversePromoActive = ColorToken.textInversePromoActive
    public let textInversePromoHover = ColorToken.textInversePromoHover
    public let textInversePromoMinor = ColorToken.textInversePromoMinor
    public let textInversePromoMinorActive = ColorToken.textInversePromoMinorActive
    public let textInversePromoMinorHover = ColorToken.textInversePromoMinorHover
    public let textInverseSecondary = ColorToken.textInverseSecondary
    public let textInverseSecondaryActive = ColorToken.textInverseSecondaryActive
    public let textInverseSecondaryHover = ColorToken.textInverseSecondaryHover
    public let textInverseTertiary = ColorToken.textInverseTertiary
    public let textInverseTertiaryActive = ColorToken.textInverseTertiaryActive
    public let textInverseTertiaryHover = ColorToken.textInverseTertiaryHover
    public let textInverseWarning = ColorToken.textInverseWarning
    public let textInverseWarningActive = ColorToken.textInverseWarningActive
    public let textInverseWarningHover = ColorToken.textInverseWarningHover
    public let textInverseWarningMinor = ColorToken.textInverseWarningMinor
    public let textInverseWarningMinorActive = ColorToken.textInverseWarningMinorActive
    public let textInverseWarningMinorHover = ColorToken.textInverseWarningMinorHover
    public let textOnDarkAccent = ColorToken.textOnDarkAccent
    public let textOnDarkAccentActive = ColorToken.textOnDarkAccentActive
    public let textOnDarkAccentHover = ColorToken.textOnDarkAccentHover
    public let textOnDarkAccentMinor = ColorToken.textOnDarkAccentMinor
    public let textOnDarkAccentMinorActive = ColorToken.textOnDarkAccentMinorActive
    public let textOnDarkAccentMinorHover = ColorToken.textOnDarkAccentMinorHover
    public let textOnDarkInfo = ColorToken.textOnDarkInfo
    public let textOnDarkInfoActive = ColorToken.textOnDarkInfoActive
    public let textOnDarkInfoHover = ColorToken.textOnDarkInfoHover
    public let textOnDarkInfoMinor = ColorToken.textOnDarkInfoMinor
    public let textOnDarkInfoMinorActive = ColorToken.textOnDarkInfoMinorActive
    public let textOnDarkInfoMinorHover = ColorToken.textOnDarkInfoMinorHover
    public let textOnDarkNegative = ColorToken.textOnDarkNegative
    public let textOnDarkNegativeActive = ColorToken.textOnDarkNegativeActive
    public let textOnDarkNegativeHover = ColorToken.textOnDarkNegativeHover
    public let textOnDarkNegativeMinor = ColorToken.textOnDarkNegativeMinor
    public let textOnDarkNegativeMinorActive = ColorToken.textOnDarkNegativeMinorActive
    public let textOnDarkNegativeMinorHover = ColorToken.textOnDarkNegativeMinorHover
    public let textOnDarkParagraph = ColorToken.textOnDarkParagraph
    public let textOnDarkParagraphActive = ColorToken.textOnDarkParagraphActive
    public let textOnDarkParagraphHover = ColorToken.textOnDarkParagraphHover
    public let textOnDarkPositive = ColorToken.textOnDarkPositive
    public let textOnDarkPositiveActive = ColorToken.textOnDarkPositiveActive
    public let textOnDarkPositiveHover = ColorToken.textOnDarkPositiveHover
    public let textOnDarkPositiveMinor = ColorToken.textOnDarkPositiveMinor
    public let textOnDarkPositiveMinorActive = ColorToken.textOnDarkPositiveMinorActive
    public let textOnDarkPositiveMinorHover = ColorToken.textOnDarkPositiveMinorHover
    public let textOnDarkPrimary = ColorToken.textOnDarkPrimary
    public let textOnDarkPrimaryActive = ColorToken.textOnDarkPrimaryActive
    public let textOnDarkPrimaryHover = ColorToken.textOnDarkPrimaryHover
    public let textOnDarkPromo = ColorToken.textOnDarkPromo
    public let textOnDarkPromoActive = ColorToken.textOnDarkPromoActive
    public let textOnDarkPromoHover = ColorToken.textOnDarkPromoHover
    public let textOnDarkPromoMinor = ColorToken.textOnDarkPromoMinor
    public let textOnDarkPromoMinorActive = ColorToken.textOnDarkPromoMinorActive
    public let textOnDarkPromoMinorHover = ColorToken.textOnDarkPromoMinorHover
    public let textOnDarkSecondary = ColorToken.textOnDarkSecondary
    public let textOnDarkSecondaryActive = ColorToken.textOnDarkSecondaryActive
    public let textOnDarkSecondaryHover = ColorToken.textOnDarkSecondaryHover
    public let textOnDarkTertiary = ColorToken.textOnDarkTertiary
    public let textOnDarkTertiaryActive = ColorToken.textOnDarkTertiaryActive
    public let textOnDarkTertiaryHover = ColorToken.textOnDarkTertiaryHover
    public let textOnDarkWarning = ColorToken.textOnDarkWarning
    public let textOnDarkWarningActive = ColorToken.textOnDarkWarningActive
    public let textOnDarkWarningHover = ColorToken.textOnDarkWarningHover
    public let textOnDarkWarningMinor = ColorToken.textOnDarkWarningMinor
    public let textOnDarkWarningMinorActive = ColorToken.textOnDarkWarningMinorActive
    public let textOnDarkWarningMinorHover = ColorToken.textOnDarkWarningMinorHover
    public let textOnLightAccent = ColorToken.textOnLightAccent
    public let textOnLightAccentActive = ColorToken.textOnLightAccentActive
    public let textOnLightAccentHover = ColorToken.textOnLightAccentHover
    public let textOnLightAccentMinor = ColorToken.textOnLightAccentMinor
    public let textOnLightAccentMinorActive = ColorToken.textOnLightAccentMinorActive
    public let textOnLightAccentMinorHover = ColorToken.textOnLightAccentMinorHover
    public let textOnLightInfo = ColorToken.textOnLightInfo
    public let textOnLightInfoActive = ColorToken.textOnLightInfoActive
    public let textOnLightInfoHover = ColorToken.textOnLightInfoHover
    public let textOnLightInfoMinor = ColorToken.textOnLightInfoMinor
    public let textOnLightInfoMinorActive = ColorToken.textOnLightInfoMinorActive
    public let textOnLightInfoMinorHover = ColorToken.textOnLightInfoMinorHover
    public let textOnLightNegative = ColorToken.textOnLightNegative
    public let textOnLightNegativeActive = ColorToken.textOnLightNegativeActive
    public let textOnLightNegativeHover = ColorToken.textOnLightNegativeHover
    public let textOnLightNegativeMinor = ColorToken.textOnLightNegativeMinor
    public let textOnLightNegativeMinorActive = ColorToken.textOnLightNegativeMinorActive
    public let textOnLightNegativeMinorHover = ColorToken.textOnLightNegativeMinorHover
    public let textOnLightParagraph = ColorToken.textOnLightParagraph
    public let textOnLightParagraphActive = ColorToken.textOnLightParagraphActive
    public let textOnLightParagraphHover = ColorToken.textOnLightParagraphHover
    public let textOnLightPositive = ColorToken.textOnLightPositive
    public let textOnLightPositiveActive = ColorToken.textOnLightPositiveActive
    public let textOnLightPositiveHover = ColorToken.textOnLightPositiveHover
    public let textOnLightPositiveMinor = ColorToken.textOnLightPositiveMinor
    public let textOnLightPositiveMinorActive = ColorToken.textOnLightPositiveMinorActive
    public let textOnLightPositiveMinorHover = ColorToken.textOnLightPositiveMinorHover
    public let textOnLightPrimary = ColorToken.textOnLightPrimary
    public let textOnLightPrimaryActive = ColorToken.textOnLightPrimaryActive
    public let textOnLightPrimaryHover = ColorToken.textOnLightPrimaryHover
    public let textOnLightPromo = ColorToken.textOnLightPromo
    public let textOnLightPromoActive = ColorToken.textOnLightPromoActive
    public let textOnLightPromoHover = ColorToken.textOnLightPromoHover
    public let textOnLightPromoMinor = ColorToken.textOnLightPromoMinor
    public let textOnLightPromoMinorActive = ColorToken.textOnLightPromoMinorActive
    public let textOnLightPromoMinorHover = ColorToken.textOnLightPromoMinorHover
    public let textOnLightSecondary = ColorToken.textOnLightSecondary
    public let textOnLightSecondaryActive = ColorToken.textOnLightSecondaryActive
    public let textOnLightSecondaryHover = ColorToken.textOnLightSecondaryHover
    public let textOnLightTertiary = ColorToken.textOnLightTertiary
    public let textOnLightTertiaryActive = ColorToken.textOnLightTertiaryActive
    public let textOnLightTertiaryHover = ColorToken.textOnLightTertiaryHover
    public let textOnLightWarning = ColorToken.textOnLightWarning
    public let textOnLightWarningActive = ColorToken.textOnLightWarningActive
    public let textOnLightWarningHover = ColorToken.textOnLightWarningHover
    public let textOnLightWarningMinor = ColorToken.textOnLightWarningMinor
    public let textOnLightWarningMinorActive = ColorToken.textOnLightWarningMinorActive
    public let textOnLightWarningMinorHover = ColorToken.textOnLightWarningMinorHover
}

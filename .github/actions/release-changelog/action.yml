name: 'Get release changelog'

description: 'Returns release changelog'

inputs:
  fromTag:
    description: '–¢—ç–≥, –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –∏–ª–∏ —Ö—ç—à –∫–æ–º–º–∏—Ç–∞'
    required: false
  toTag:
    description: '–¢—ç–≥, –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –∏–ª–∏ —Ö—ç—à –∫–æ–º–º–∏—Ç–∞'
    required: false

outputs:
  changelog:
    description: "Processed changelog"
    value: ${{ steps.changelog.outputs.changelog }}
  changelog_json:
    description: "Processed changelog json"
    value: ${{ steps.changelog.outputs.changelogJson }}
  pull_requests:
    description: "Pull requests"
    value: ${{ steps.github_release.outputs.pull_requests }}

runs:
  using: "composite"
  steps:
    - name: Compute envs
      shell: bash
      run: |
        echo "üîç Debug: Available tags:"
        git tag --sort=-creatordate | head -10
        
        if [ -z "${{ inputs.fromTag }}" ]; then
          FROM_TAG=$(git tag --sort=-creatordate | grep '^release-' | sed -n '2p')
          echo "üîç Auto-detected FROM_TAG: $FROM_TAG"
        else
          FROM_TAG="${{ inputs.fromTag }}"
          echo "üîç Using provided FROM_TAG: $FROM_TAG"
        fi

        if [ -z "${{ inputs.toTag }}" ]; then
          TO_TAG=$(git tag --sort=-creatordate | grep '^release-' | sed -n '1p')
          echo "üîç Auto-detected TO_TAG: $TO_TAG"
        else
          TO_TAG="${{ inputs.toTag }}"
          echo "üîç Using provided TO_TAG: $TO_TAG"
        fi

        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–≥–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–º–∏—Ç—ã
        if [ -z "$FROM_TAG" ]; then
          FROM_TAG=$(git rev-parse HEAD~10)
          echo "‚ö†Ô∏è No release tags found, using HEAD~10: $FROM_TAG"
        fi
        
        if [ -z "$TO_TAG" ]; then
          TO_TAG="HEAD"
          echo "‚ö†Ô∏è No release tags found, using HEAD: $TO_TAG"
        fi

        echo "FROM_TAG=$FROM_TAG" >> $GITHUB_ENV
        echo "TO_TAG=$TO_TAG" >> $GITHUB_ENV
        echo "FROM_TAG = $FROM_TAG and TO_TAG = $TO_TAG"
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∫–æ–º–º–∏—Ç—ã –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏
        echo "üîç Checking commits between tags:"
        git log --oneline $FROM_TAG..$TO_TAG | head -10
        
        DATE=$(date +'%d.%m.%Y')
        echo "DATE=$DATE" >> $GITHUB_ENV
        echo "FILE=${{ github.workspace }}/release-changelog.md" >> $GITHUB_ENV

    - name: Build Changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v4.1.0
      with:
        fromTag: ${{ env.FROM_TAG }}
        toTag:  ${{ env.TO_TAG }}
        configuration: "./.github/changelog-builder-config.json"
        ignorePreReleases: false
        failOnError: false

    - name: Install dependencies
      shell: bash
      run: |
        cd .github/actions/preprocessing-release-changelog
        npm ci

    - name: Processing changelog data
      id: changelog
      uses: ./.github/actions/preprocessing-release-changelog
      with:
        data: |
          ${{ steps.github_release.outputs.changelog }}

    - name: Create "release-changelog.md"
      shell: bash
      run: |
        echo "${{ steps.changelog.outputs.changelog }}" > "${{ env.FILE }}"   

    - name: Debug print release-changelog.md
      shell: bash
      run: |
        echo "üîç Changelog generation debug:"
        echo "FROM_TAG: ${{ env.FROM_TAG }}"
        echo "TO_TAG: ${{ env.TO_TAG }}"
        echo "Raw changelog from mikepenz action:"
        echo "${{ steps.github_release.outputs.changelog }}"
        echo "Processed changelog length: $(echo "${{ steps.changelog.outputs.changelog }}" | wc -c)"
        echo "Contents of release-changelog.md:"
        cat "${{ env.FILE }}"

    - name: Upload "release-changelog.md"
      if: false
      uses: actions/upload-artifact@master
      with:
        name: release-changelog-artifacts
        path: ${{ env.FILE }}

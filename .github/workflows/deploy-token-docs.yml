name: 'Deploy tokens docs'

on:
  repository_dispatch:
    types: [publish-tokens]
  workflow_dispatch:
    inputs:
      modules:
        type: string
        description: 'Список модулей в формате json (например, [":tokens:styles-salute-theme", ":tokens:sddsserv-theme", ":tokens:plasma-b2c-theme", ":tokens:plasma-home-ds-theme"])'
        required: true
      tag:
        description: "Тэг для релиза"
        required: true
      theme_name:
        type: choice
        description: 'Название темы для документации'
        options:
          - plasma-homeds
          - plasma-b2c
          - sddsserv
          - styles-salute
        default: 'sddsserv'
        required: true

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  state:
    name: Prepare state
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.prepare.outputs.ref }}
      modules: ${{ steps.prepare.outputs.modules }}
      theme_name: ${{ steps.prepare.outputs.theme_name }}

    steps:
      - name: Prepare modules and tag
        id: prepare
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "Using modules and tag from repository_dispatch event"
            echo "modules=${{ github.event.client_payload.modules }}" >> $GITHUB_OUTPUT
            echo "ref=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT
            echo "theme_name=plasma-homeds" >> $GITHUB_OUTPUT
          else
            echo "Using modules and tag from workflow_dispatch input"
            echo "Input modules ${{ github.event.inputs.modules }}"
            echo "modules=${{ github.event.inputs.modules }}" >> $GITHUB_OUTPUT
            echo "ref=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
            echo "theme_name=${{ github.event.inputs.theme_name }}" >> $GITHUB_OUTPUT
          fi

  deploy:
    name: Deploy docs
    needs: state
    uses: ./.github/workflows/deploy-token-docs-common.yml
    secrets: inherit
    with:
      modules: ${{ needs.state.outputs.modules }}
      ref: ${{ needs.state.outputs.ref }}
      theme_name: ${{ needs.state.outputs.theme_name }}
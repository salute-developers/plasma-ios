name: 'Build and Publish SDDS Components'

on:
  push:
    tags:
      - "SDDS-v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: macos-latest
    environment: sdds
    strategy:
      matrix:
        module: 
          - name: SDDSComponents
            project_path: SDDSComponents/SDDSComponents.xcodeproj
          - name: SDDSThemeCore
            project_path: SDDSThemeBuilder/SDDSThemeBuilder.xcodeproj

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest'
          
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install dependencies
        run: gem install xcodeproj

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#SDDS-}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Run build script for ${{ matrix.module.name }}
        run: |
          chmod +x ./scripts/build_xcframeworks.rb
          ruby ./scripts/build_xcframeworks.rb -d . -p ${{ matrix.module.project_path }} -m ${{ matrix.module.name }}

      - name: Generate ${{ matrix.module.name }} zip
        id: zip_artifact
        run: |
          cd build/${{ matrix.module.name }}
          zip -r ../../${{ matrix.module.name }}-v${{ env.VERSION }}.zip .
          echo "::set-output name=zip_path::${{ matrix.module.name }}-v${{ env.VERSION }}.zip"

      - name: Release ${{ matrix.module.name }}
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.zip_artifact.outputs.zip_path }}
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GH_TOKEN }}

name: 'Publish icons Release'

on:
  pull_request:
  push:
    tags:
      - "SDDSIcons-v[0-9]+.[0-9]+.[0-9]+"

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  generate-distribution:
    name: Generate icons distribution zip
    runs-on: macos-latest
    environment: sdds
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest'
          
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Build SDDSIcons
        run: |
          #TAG_NAME=${GITHUB_REF#refs/tags/}
          TAG_NAME="SDDSIcons-v1.0.0"
          xcodebuild -project SDDSIcons/SDDSIcons.xcodeproj -scheme "Build XCFramework" BUILD_DIR=./$TAG_NAME
          
      - name: Generate distribution zip
        id: zip_artifact
        run: |
           #TAG_NAME=${GITHUB_REF#refs/tags/}
           TAG_NAME="SDDSIcons-v1.0.0"
           echo "Tag name: $TAG_NAME"
           cd SDDSIcons
           mv build $TAG_NAME
           zip -r ./../$TAG_NAME.zip $TAG_NAME/SDDSIcons.xcframework
           echo "::set-output name=zip_path::${TAG_NAME}.zip"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.zip_artifact.outputs.zip_path }}
          tag_name: "SDDSIcons-v1.0.0"
          token: ${{ secrets.GH_TOKEN }}

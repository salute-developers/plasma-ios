import Foundation

public extension TextFieldAppearance {
    func size(_ size: TextFieldSizeConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func captionTypography(_ captionTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func innerTitleTypography(_ innerTitleTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func textAfterTypography(_ textAfterTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func textBeforeTypography(_ textBeforeTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func textTypography(_ textTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

    func titleTypography(_ titleTypography: TypographyConfiguration) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: titleTypography
        )
    }
    
    func chipAppearance(_ chipAppearance: ChipAppearance) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: titleTypography
        )
    }
    
    func chipGroupAppearance(_ chipGroupAppearance: ChipGroupAppearance) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: self.backgroundColor,
            backgroundColorFocused: self.backgroundColorFocused,
            backgroundColorReadOnly: self.backgroundColorReadOnly,
            borderColor: self.borderColor,
            captionColor: self.captionColor,
            captionColorFocused: self.captionColorFocused,
            captionColorReadOnly: self.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: self.cursorColor,
            disabledAlpha: self.disabledAlpha,
            endContentColor: self.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: self.lineColor,
            lineColorFocused: self.lineColorFocused,
            optionalTitleColor: self.optionalTitleColor,
            placeholderColor: self.placeholderColor,
            placeholderColorFocused: self.placeholderColorFocused,
            placeholderColorReadOnly: self.placeholderColorReadOnly,
            requiredIndicatorColor: self.requiredIndicatorColor,
            startContentColor: self.startContentColor,
            textAfterColor: self.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: self.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: self.textColor,
            textColorFocused: self.textColorFocused,
            textColorReadOnly: self.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: self.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: titleTypography
        )
    }
    
    func applyColorVariation(variation: TextFieldAppearance) -> TextFieldAppearance {
        return TextFieldAppearance(
            size: self.size,
            chipGroupAppearance: self.chipGroupAppearance,
            chipAppearance: self.chipAppearance,
            backgroundColor: variation.backgroundColor,
            backgroundColorFocused: variation.backgroundColorFocused,
            backgroundColorReadOnly: variation.backgroundColorReadOnly,
            borderColor: variation.borderColor,
            captionColor: variation.captionColor,
            captionColorFocused: variation.captionColorFocused,
            captionColorReadOnly: variation.captionColorReadOnly,
            captionTextAlignment: self.captionTextAlignment,
            captionTypography: self.captionTypography,
            cursorColor: variation.cursorColor,
            disabledAlpha: variation.disabledAlpha,
            endContentColor: variation.endContentColor,
            inputTextAlignment: self.inputTextAlignment,
            innerTitleTextAlignment: self.innerTitleTextAlignment,
            innerTitleTypography: self.innerTitleTypography,
            lineColor: variation.lineColor,
            lineColorFocused: variation.lineColorFocused,
            optionalTitleColor: variation.optionalTitleColor,
            placeholderColor: variation.placeholderColor,
            placeholderColorFocused: variation.placeholderColorFocused,
            placeholderColorReadOnly: variation.placeholderColorReadOnly,
            requiredIndicatorColor: variation.requiredIndicatorColor,
            startContentColor: variation.startContentColor,
            textAfterColor: variation.textAfterColor,
            textAfterTypography: self.textAfterTypography,
            textBeforeColor: variation.textBeforeColor,
            textBeforeTypography: self.textBeforeTypography,
            textColor: variation.textColor,
            textColorFocused: variation.textColorFocused,
            textColorReadOnly: variation.textColorReadOnly,
            textTypography: self.textTypography,
            titleColor: variation.titleColor,
            titleTextAlignment: self.titleTextAlignment,
            titleTypography: self.titleTypography
        )
    }

}
